{
	"id": "952f93eb9d44b403bda69f8a65511883",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/send与transfer区别.sol": {
				"content": "// SPDX-Licence-Identifier: MIT\r\npragma solidity ~0.8.20;\r\n\r\n\r\n\r\n/** \r\ntransfer()\r\n        特点：\r\n\r\n        gas 限制：2300（仅适用于 fallback 或 receive ）\r\n\r\n        失败时会自动 revert（交易回滚）\r\n\r\n        推荐使用，因为它更安全\r\n2. send()\r\n\r\n        ool success = addr.send(amount);\r\n        require(success, \"Send failed\");\r\n        ✅ 特点：\r\n\r\n        gas 限制：2300\r\n\r\n        不会自动回滚，只会返回 true/false\r\n\r\n        需要手动检查返回值（否则可能丢失资金）\r\n call.value()（更灵活但风险更高）\r\n\r\n            (bool success, ) = addr.call{value: amount}(\"\");\r\n            require(success, \"Call failed\");\r\n        特点：\r\n\r\n        无 gas 限制（可以消耗比 2300 更多的 gas）\r\n\r\n        推荐用于 call 复杂合约\r\n\r\n        比 transfer() 和 send() 更危险，可能导致重入攻击\r\n**/\r\ncontract TestSendAndTransfer{\r\n\r\n    address payable add  ;\r\n\r\n    function transferTest()public  {\r\n            add.transfer(10);\r\n\r\n    }\r\n\r\n    function testSend() public {\r\n      bool success=  add.send(10);\r\n      require(success,\"send failed\");\r\n    }\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"test/send与transfer区别.sol": {
				"TestSendAndTransfer": {
					"abi": [
						{
							"inputs": [],
							"name": "testSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferTest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":906:1170  contract TestSendAndTransfer{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":906:1170  contract TestSendAndTransfer{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x727b52b1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc07aaf0f\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":973:1045  function transferTest()public  {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1053:1163  function testSend() public {... */\n    tag_4:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":973:1045  function transferTest()public  {... */\n    tag_6:\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1019:1022  add */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1019:1031  add.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1019:1035  add.transfer(10) */\n      0x08fc\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1032:1034  10 */\n      0x0a\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1019:1035  add.transfer(10) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":973:1045  function transferTest()public  {... */\n      jump\t// out\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1053:1163  function testSend() public {... */\n    tag_8:\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1089:1101  bool success */\n      0x00\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1104:1107  add */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1104:1112  add.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1104:1116  add.send(10) */\n      0x08fc\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1113:1115  10 */\n      0x0a\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1104:1116  add.send(10) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1089:1116  bool success=  add.send(10) */\n      swap1\n      pop\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1133:1140  success */\n      dup1\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1125:1155  require(success,\"send failed\") */\n      tag_14\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1080:1163  {... */\n      pop\n        /* \"test/send\\xe4\\xb8\\x8etransfer\\xe5\\x8c\\xba\\xe5\\x88\\xab.sol\":1053:1163  function testSend() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_17:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:343   */\n    tag_18:\n        /* \"#utility.yul\":322:335   */\n      0x73656e64206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:336   */\n      mstore\n        /* \"#utility.yul\":182:343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":349:715   */\n    tag_19:\n        /* \"#utility.yul\":491:494   */\n      0x00\n        /* \"#utility.yul\":512:579   */\n      tag_24\n        /* \"#utility.yul\":576:578   */\n      0x0b\n        /* \"#utility.yul\":571:574   */\n      dup4\n        /* \"#utility.yul\":512:579   */\n      tag_17\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":505:579   */\n      swap2\n      pop\n        /* \"#utility.yul\":588:681   */\n      tag_25\n        /* \"#utility.yul\":677:680   */\n      dup3\n        /* \"#utility.yul\":588:681   */\n      tag_18\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":706:708   */\n      0x20\n        /* \"#utility.yul\":701:704   */\n      dup3\n        /* \"#utility.yul\":697:709   */\n      add\n        /* \"#utility.yul\":690:709   */\n      swap1\n      pop\n        /* \"#utility.yul\":349:715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":721:1140   */\n    tag_16:\n        /* \"#utility.yul\":887:891   */\n      0x00\n        /* \"#utility.yul\":925:927   */\n      0x20\n        /* \"#utility.yul\":914:923   */\n      dup3\n        /* \"#utility.yul\":910:928   */\n      add\n        /* \"#utility.yul\":902:928   */\n      swap1\n      pop\n        /* \"#utility.yul\":974:983   */\n      dup2\n        /* \"#utility.yul\":968:972   */\n      dup2\n        /* \"#utility.yul\":964:984   */\n      sub\n        /* \"#utility.yul\":960:961   */\n      0x00\n        /* \"#utility.yul\":949:958   */\n      dup4\n        /* \"#utility.yul\":945:962   */\n      add\n        /* \"#utility.yul\":938:985   */\n      mstore\n        /* \"#utility.yul\":1002:1133   */\n      tag_27\n        /* \"#utility.yul\":1128:1132   */\n      dup2\n        /* \"#utility.yul\":1002:1133   */\n      tag_19\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":994:1133   */\n      swap1\n      pop\n        /* \"#utility.yul\":721:1140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220317561d6df67e89ce45aad51f0feb05d62f5255befeadd8ea02a13d0da79094464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101fb8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063727b52b114610038578063c07aaf0f14610042575b5f80fd5b61004061004c565b005b61004a6100b2565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a90811502906040515f60405180830381858888f193505050501580156100af573d5f803e3d5ffd5b50565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a90811502906040515f60405180830381858888f1935050505090508061014a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610141906101a7565b60405180910390fd5b50565b5f82825260208201905092915050565b7f73656e64206661696c65640000000000000000000000000000000000000000005f82015250565b5f610191600b8361014d565b915061019c8261015d565b602082019050919050565b5f6020820190508181035f8301526101be81610185565b905091905056fea2646970667358221220317561d6df67e89ce45aad51f0feb05d62f5255befeadd8ea02a13d0da79094464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FB DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x727B52B1 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xC07AAF0F EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0x14A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x73656E64206661696C6564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x191 PUSH1 0xB DUP4 PUSH2 0x14D JUMP JUMPDEST SWAP2 POP PUSH2 0x19C DUP3 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE DUP2 PUSH2 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH22 0x61D6DF67E89CE45AAD51F0FEB05D62F5255BEFEADD8E LOG0 0x2A SGT 0xD0 0xDA PUSH26 0x94464736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "906:264:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testSend_30": {
									"entryPoint": 178,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferTest_14": {
									"entryPoint": 76,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1143:1",
										"nodeType": "YulBlock",
										"src": "0:1143:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:1",
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:19:1",
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nativeSrc": "113:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nativeSrc": "141:29:1",
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:1",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nativeSrc": "156:14:1",
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:1",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:1",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:1",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nativeSrc": "288:55:1",
													"nodeType": "YulBlock",
													"src": "288:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nativeSrc": "306:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "73656e64206661696c6564",
																		"kind": "string",
																		"nativeSrc": "322:13:1",
																		"nodeType": "YulLiteral",
																		"src": "322:13:1",
																		"type": "",
																		"value": "send failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nativeSrc": "299:37:1",
																"nodeType": "YulFunctionCall",
																"src": "299:37:1"
															},
															"nativeSrc": "299:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "299:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a",
												"nativeSrc": "182:161:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:161:1"
											},
											{
												"body": {
													"nativeSrc": "495:220:1",
													"nodeType": "YulBlock",
													"src": "495:220:1",
													"statements": [
														{
															"nativeSrc": "505:74:1",
															"nodeType": "YulAssignment",
															"src": "505:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "571:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "571:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "576:2:1",
																		"nodeType": "YulLiteral",
																		"src": "576:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "512:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "512:58:1"
																},
																"nativeSrc": "512:67:1",
																"nodeType": "YulFunctionCall",
																"src": "512:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "505:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "677:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "677:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a",
																	"nativeSrc": "588:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "588:88:1"
																},
																"nativeSrc": "588:93:1",
																"nodeType": "YulFunctionCall",
																"src": "588:93:1"
															},
															"nativeSrc": "588:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "588:93:1"
														},
														{
															"nativeSrc": "690:19:1",
															"nodeType": "YulAssignment",
															"src": "690:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "701:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "701:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "706:2:1",
																		"nodeType": "YulLiteral",
																		"src": "706:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "697:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "697:3:1"
																},
																"nativeSrc": "697:12:1",
																"nodeType": "YulFunctionCall",
																"src": "697:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "690:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "349:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "483:3:1",
														"nodeType": "YulTypedName",
														"src": "483:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "491:3:1",
														"nodeType": "YulTypedName",
														"src": "491:3:1",
														"type": ""
													}
												],
												"src": "349:366:1"
											},
											{
												"body": {
													"nativeSrc": "892:248:1",
													"nodeType": "YulBlock",
													"src": "892:248:1",
													"statements": [
														{
															"nativeSrc": "902:26:1",
															"nodeType": "YulAssignment",
															"src": "902:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "914:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "914:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "925:2:1",
																		"nodeType": "YulLiteral",
																		"src": "925:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "910:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:1"
																},
																"nativeSrc": "910:18:1",
																"nodeType": "YulFunctionCall",
																"src": "910:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "902:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "902:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "949:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "949:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "960:1:1",
																				"nodeType": "YulLiteral",
																				"src": "960:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "945:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:1"
																		},
																		"nativeSrc": "945:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "945:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "968:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "968:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "974:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "974:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "964:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "964:3:1"
																		},
																		"nativeSrc": "964:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "964:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "938:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:1"
																},
																"nativeSrc": "938:47:1",
																"nodeType": "YulFunctionCall",
																"src": "938:47:1"
															},
															"nativeSrc": "938:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "938:47:1"
														},
														{
															"nativeSrc": "994:139:1",
															"nodeType": "YulAssignment",
															"src": "994:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1128:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1128:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1002:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1002:124:1"
																},
																"nativeSrc": "1002:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1002:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "994:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "994:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "721:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "872:9:1",
														"nodeType": "YulTypedName",
														"src": "872:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "887:4:1",
														"nodeType": "YulTypedName",
														"src": "887:4:1",
														"type": ""
													}
												],
												"src": "721:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a(memPtr) {\n\n        mstore(add(memPtr, 0), \"send failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063727b52b114610038578063c07aaf0f14610042575b5f80fd5b61004061004c565b005b61004a6100b2565b005b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a90811502906040515f60405180830381858888f193505050501580156100af573d5f803e3d5ffd5b50565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a90811502906040515f60405180830381858888f1935050505090508061014a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610141906101a7565b60405180910390fd5b50565b5f82825260208201905092915050565b7f73656e64206661696c65640000000000000000000000000000000000000000005f82015250565b5f610191600b8361014d565b915061019c8261015d565b602082019050919050565b5f6020820190508181035f8301526101be81610185565b905091905056fea2646970667358221220317561d6df67e89ce45aad51f0feb05d62f5255befeadd8ea02a13d0da79094464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x727B52B1 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xC07AAF0F EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0xB2 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP DUP1 PUSH2 0x14A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141 SWAP1 PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x73656E64206661696C6564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x191 PUSH1 0xB DUP4 PUSH2 0x14D JUMP JUMPDEST SWAP2 POP PUSH2 0x19C DUP3 PUSH2 0x15D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE DUP2 PUSH2 0x185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH22 0x61D6DF67E89CE45AAD51F0FEB05D62F5255BEFEADD8E LOG0 0x2A SGT 0xD0 0xDA PUSH26 0x94464736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "906:264:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:72;;;:::i;:::-;;1053:110;;;:::i;:::-;;973:72;1019:3;;;;;;;;;;:12;;:16;1032:2;1019:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;973:72::o;1053:110::-;1089:12;1104:3;;;;;;;;;;;:8;;:12;1113:2;1104:12;;;;;;;;;;;;;;;;;;;;;;;1089:27;;1133:7;1125:30;;;;;;;;;;;;:::i;:::-;;;;;;;;;1080:83;1053:110::o;7:169:1:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:161::-;322:13;318:1;310:6;306:14;299:37;182:161;:::o;349:366::-;491:3;512:67;576:2;571:3;512:67;:::i;:::-;505:74;;588:93;677:3;588:93;:::i;:::-;706:2;701:3;697:12;690:19;;349:366;;;:::o;721:419::-;887:4;925:2;914:9;910:18;902:26;;974:9;968:4;964:20;960:1;949:9;945:17;938:47;1002:131;1128:4;1002:131;:::i;:::-;994:139;;721:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "101400",
								"executionCost": "145",
								"totalCost": "101545"
							},
							"external": {
								"testSend()": "infinite",
								"transferTest()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 1170,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220317561d6df67e89ce45aad51f0feb05d62f5255befeadd8ea02a13d0da79094464736f6c634300081a0033",
									".code": [
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "727B52B1"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "C07AAF0F"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 906,
											"end": 1170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 973,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1053,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 973,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1019,
											"end": 1031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1053,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1104,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1112,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1104,
											"end": 1112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1113,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1089,
											"end": 1116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1133,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1125,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1125,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1053,
											"end": 1163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 343,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 182,
											"end": 343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "73656E64206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 349,
											"end": 715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 491,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 571,
											"end": 574,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 512,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 512,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 512,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 512,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 505,
											"end": 579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 677,
											"end": 680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 588,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 588,
											"end": 681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 588,
											"end": 681,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 588,
											"end": 681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 706,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 690,
											"end": 709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 349,
											"end": 715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 887,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 910,
											"end": 928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 902,
											"end": 928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 902,
											"end": 928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 960,
											"end": 961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 945,
											"end": 962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1002,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1002,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"test/send与transfer区别.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"testSend()": "c07aaf0f",
							"transferTest()": "727b52b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"testSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferTest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"transfer() \\u7279\\u70b9\\uff1a gas \\u9650\\u5236\\uff1a2300\\uff08\\u4ec5\\u9002\\u7528\\u4e8e fallback \\u6216 receive \\uff09 \\u5931\\u8d25\\u65f6\\u4f1a\\u81ea\\u52a8 revert\\uff08\\u4ea4\\u6613\\u56de\\u6eda\\uff09 \\u63a8\\u8350\\u4f7f\\u7528\\uff0c\\u56e0\\u4e3a\\u5b83\\u66f4\\u5b89\\u5168 2. send() ool success = addr.send(amount); require(success, \\\"Send failed\\\"); \\u2705 \\u7279\\u70b9\\uff1a gas \\u9650\\u5236\\uff1a2300 \\u4e0d\\u4f1a\\u81ea\\u52a8\\u56de\\u6eda\\uff0c\\u53ea\\u4f1a\\u8fd4\\u56de true/false \\u9700\\u8981\\u624b\\u52a8\\u68c0\\u67e5\\u8fd4\\u56de\\u503c\\uff08\\u5426\\u5219\\u53ef\\u80fd\\u4e22\\u5931\\u8d44\\u91d1\\uff09 call.value()\\uff08\\u66f4\\u7075\\u6d3b\\u4f46\\u98ce\\u9669\\u66f4\\u9ad8\\uff09 (bool success, ) = addr.call{value: amount}(\\\"\\\"); require(success, \\\"Call failed\\\"); \\u7279\\u70b9\\uff1a \\u65e0 gas \\u9650\\u5236\\uff08\\u53ef\\u4ee5\\u6d88\\u8017\\u6bd4 2300 \\u66f4\\u591a\\u7684 gas\\uff09 \\u63a8\\u8350\\u7528\\u4e8e call \\u590d\\u6742\\u5408\\u7ea6 \\u6bd4 transfer() \\u548c send() \\u66f4\\u5371\\u9669\\uff0c\\u53ef\\u80fd\\u5bfc\\u81f4\\u91cd\\u5165\\u653b\\u51fb*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/send\\u4e0etransfer\\u533a\\u522b.sol\":\"TestSendAndTransfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/send\\u4e0etransfer\\u533a\\u522b.sol\":{\"keccak256\":\"0x961ebd8c502fb3cddf1b827e9bffda3553ecd03adf689ee226c345daf00e50d9\",\"urls\":[\"bzz-raw://9b7f4d184e085536183504ba14fb7618e2d3fda42b4f16724acb627bba1d873e\",\"dweb:/ipfs/QmV56RRUM3hcppUnq5zkevAs6absDZ7wrSLJCRRJLoduE9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "test/send与transfer区别.sol:TestSendAndTransfer",
								"label": "add",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "transfer() 特点： gas 限制：2300（仅适用于 fallback 或 receive ） 失败时会自动 revert（交易回滚） 推荐使用，因为它更安全 2. send() ool success = addr.send(amount); require(success, \"Send failed\"); ✅ 特点： gas 限制：2300 不会自动回滚，只会返回 true/false 需要手动检查返回值（否则可能丢失资金） call.value()（更灵活但风险更高） (bool success, ) = addr.call{value: amount}(\"\"); require(success, \"Call failed\"); 特点： 无 gas 限制（可以消耗比 2300 更多的 gas） 推荐用于 call 复杂合约 比 transfer() 和 send() 更危险，可能导致重入攻击*",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test/send与transfer区别.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test/send与transfer区别.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/send与transfer区别.sol": {
				"ast": {
					"absolutePath": "test/send与transfer区别.sol",
					"exportedSymbols": {
						"TestSendAndTransfer": [
							31
						]
					},
					"id": 32,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"~",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestSendAndTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "65:839:0",
								"text": "transfer()\n特点：\ngas 限制：2300（仅适用于 fallback 或 receive ）\n失败时会自动 revert（交易回滚）\n推荐使用，因为它更安全\n2. send()\nool success = addr.send(amount);\nrequire(success, \"Send failed\");\n✅ 特点：\ngas 限制：2300\n不会自动回滚，只会返回 true/false\n需要手动检查返回值（否则可能丢失资金）\ncall.value()（更灵活但风险更高）\n(bool success, ) = addr.call{value: amount}(\"\");\nrequire(success, \"Call failed\");\n特点：\n无 gas 限制（可以消耗比 2300 更多的 gas）\n推荐用于 call 复杂合约\n比 transfer() 和 send() 更危险，可能导致重入攻击*"
							},
							"fullyImplemented": true,
							"id": 31,
							"linearizedBaseContracts": [
								31
							],
							"name": "TestSendAndTransfer",
							"nameLocation": "915:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "add",
									"nameLocation": "959:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 31,
									"src": "943:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "943:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "1004:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1032:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 7,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1019:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1023:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1019:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1019:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "1019:16:0"
											}
										]
									},
									"functionSelector": "727b52b1",
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTest",
									"nameLocation": "982:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:0:0"
									},
									"scope": 31,
									"src": "973:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "1080:83:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1094:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 29,
														"src": "1089:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 17,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1089:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1113:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 19,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "1104:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1108:4:0",
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "1104:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1104:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1089:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 25,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73656e64206661696c6564",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a",
																"typeString": "literal_string \"send failed\""
															},
															"value": "send failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_673f7f3bd60b1339c168941b741b4e37d296d21918dbeff1b70decaad883538a",
																"typeString": "literal_string \"send failed\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1125:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1125:30:0"
											}
										]
									},
									"functionSelector": "c07aaf0f",
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testSend",
									"nameLocation": "1062:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1070:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1080:0:0"
									},
									"scope": 31,
									"src": "1053:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 32,
							"src": "906:264:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1137:0"
				},
				"id": 0
			}
		}
	}
}