{
	"id": "bfbf739f94c91191042e4c7de61a2c84",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/使用地址类型.sol": {
				"content": "// SPDX-License-Ientifier: MIT\r\npragma solidity ~0.8.20;\r\n\r\n\r\n/** \r\n    地址类型有两种：\r\n\r\naddress：保存一个20字节的值（以太坊地址的大小）。\r\n\r\naddress payable：表示可支付地址（可接受以太币的地址），在地址格式上，其实与address 完全相同，也是20字节。\r\n\r\n在编写合约时，大部分时候，使用address就好，当需要向地址转账时，可以使用以下代码把address 转换为address payable ：\r\n\r\naddress payable ap = payable(addr);\r\n\r\n\r\n\r\naddress payable拥有的两个成员函数transfer和send （address 没有这两个方法），transfer和send 的作用是向该地址转账，下文会进一步介绍。\r\n\r\n**/\r\ncontract testAddr{\r\n    address public user;\r\n\r\n    function getUserAddress() public  returns (address) {\r\n        \r\n            user=msg.sender;\r\n            return user;\r\n\r\n    }\r\n\r\n    function getBalance() public view returns(uint){\r\n        return user.balance;\r\n    }\r\n    function testTransfer(address payable x) public {\r\n        address myAddress=address(this);\r\n        if(x.balance < 10 && myAddress.balance >10 ){\r\n            x.transfer(10); //当前合约项x地址转账10 单位=\r\n        }\r\n    }\r\n\r\n    function getContractBalance() public view  returns(uint) {\r\n        return address(this).balance;\r\n    }\r\n\r\n    receive() external payable {\r\n        // 处理收到的 ETH\r\n    }\r\n    \r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"test/使用地址类型.sol": {
				"testAddr": {
					"abi": [
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getContractBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUserAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "x",
									"type": "address"
								}
							],
							"name": "testTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "user",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":704:1415  contract testAddr{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":704:1415  contract testAddr{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4d5b608b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f8632ba\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6f9fb98a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xebc3eee8\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":892:977  function getBalance() public view returns(uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":983:1217  function testTransfer(address payable x) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":728:747  address public user */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1225:1329  function getContractBalance() public view  returns(uint) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":756:884  function getUserAddress() public  returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":892:977  function getBalance() public view returns(uint){... */\n    tag_12:\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":934:938  uint */\n      0x00\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":957:961  user */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":957:969  user.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":950:969  return user.balance */\n      swap1\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":892:977  function getBalance() public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":983:1217  function testTransfer(address payable x) public {... */\n    tag_19:\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1042:1059  address myAddress */\n      0x00\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1068:1072  this */\n      address\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1042:1073  address myAddress=address(this) */\n      swap1\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1099:1101  10 */\n      0x0a\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1087:1088  x */\n      dup3\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1087:1096  x.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1087:1101  x.balance < 10 */\n      lt\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1087:1126  x.balance < 10 && myAddress.balance >10 */\n      dup1\n      iszero\n      tag_35\n      jumpi\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1124:1126  10 */\n      0x0a\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1105:1114  myAddress */\n      dup2\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1105:1122  myAddress.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1105:1126  myAddress.balance >10 */\n      gt\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1087:1126  x.balance < 10 && myAddress.balance >10 */\n    tag_35:\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1084:1210  if(x.balance < 10 && myAddress.balance >10 ){... */\n      iszero\n      tag_36\n      jumpi\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1143:1144  x */\n      dup2\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1143:1153  x.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1143:1157  x.transfer(10) */\n      0x08fc\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1154:1156  10 */\n      0x0a\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1143:1157  x.transfer(10) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1084:1210  if(x.balance < 10 && myAddress.balance >10 ){... */\n    tag_36:\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1031:1217  {... */\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":983:1217  function testTransfer(address payable x) public {... */\n      pop\n      jump\t// out\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":728:747  address public user */\n    tag_22:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1225:1329  function getContractBalance() public view  returns(uint) {... */\n    tag_27:\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1276:1280  uint */\n      0x00\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1300:1321  address(this).balance */\n      selfbalance\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1293:1321  return address(this).balance */\n      swap1\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":1225:1329  function getContractBalance() public view  returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":756:884  function getUserAddress() public  returns (address) {... */\n    tag_31:\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":799:806  address */\n      0x00\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":838:848  msg.sender */\n      caller\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":833:837  user */\n      0x00\n      dup1\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":833:848  user=msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":870:874  user */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":863:874  return user */\n      swap1\n      pop\n        /* \"test/\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b.sol\":756:884  function getUserAddress() public  returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_41:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_42:\n        /* \"#utility.yul\":177:201   */\n      tag_55\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_41\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_14:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_57\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_42\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_44:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_46:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:1005   */\n    tag_47:\n        /* \"#utility.yul\":946:953   */\n      0x00\n        /* \"#utility.yul\":975:999   */\n      tag_63\n        /* \"#utility.yul\":993:998   */\n      dup3\n        /* \"#utility.yul\":975:999   */\n      tag_46\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":964:999   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:1005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1011:1149   */\n    tag_48:\n        /* \"#utility.yul\":1092:1124   */\n      tag_65\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1092:1124   */\n      tag_47\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1085:1090   */\n      dup2\n        /* \"#utility.yul\":1082:1125   */\n      eq\n        /* \"#utility.yul\":1072:1143   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1139:1140   */\n      0x00\n        /* \"#utility.yul\":1136:1137   */\n      dup1\n        /* \"#utility.yul\":1129:1141   */\n      revert\n        /* \"#utility.yul\":1072:1143   */\n    tag_66:\n        /* \"#utility.yul\":1011:1149   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1155:1310   */\n    tag_49:\n        /* \"#utility.yul\":1209:1214   */\n      0x00\n        /* \"#utility.yul\":1247:1253   */\n      dup2\n        /* \"#utility.yul\":1234:1254   */\n      calldataload\n        /* \"#utility.yul\":1225:1254   */\n      swap1\n      pop\n        /* \"#utility.yul\":1263:1304   */\n      tag_68\n        /* \"#utility.yul\":1298:1303   */\n      dup2\n        /* \"#utility.yul\":1263:1304   */\n      tag_48\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1155:1310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1316:1661   */\n    tag_18:\n        /* \"#utility.yul\":1383:1389   */\n      0x00\n        /* \"#utility.yul\":1432:1434   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1411:1418   */\n      dup5\n        /* \"#utility.yul\":1407:1430   */\n      sub\n        /* \"#utility.yul\":1403:1435   */\n      slt\n        /* \"#utility.yul\":1400:1519   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1438:1517   */\n      tag_71\n      tag_44\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1400:1519   */\n    tag_70:\n        /* \"#utility.yul\":1558:1559   */\n      0x00\n        /* \"#utility.yul\":1583:1644   */\n      tag_72\n        /* \"#utility.yul\":1636:1643   */\n      dup5\n        /* \"#utility.yul\":1627:1633   */\n      dup3\n        /* \"#utility.yul\":1616:1625   */\n      dup6\n        /* \"#utility.yul\":1612:1634   */\n      add\n        /* \"#utility.yul\":1583:1644   */\n      tag_49\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1573:1644   */\n      swap2\n      pop\n        /* \"#utility.yul\":1529:1654   */\n      pop\n        /* \"#utility.yul\":1316:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1763   */\n    tag_50:\n        /* \"#utility.yul\":1704:1711   */\n      0x00\n        /* \"#utility.yul\":1733:1757   */\n      tag_74\n        /* \"#utility.yul\":1751:1756   */\n      dup3\n        /* \"#utility.yul\":1733:1757   */\n      tag_46\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1722:1757   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1769:1887   */\n    tag_51:\n        /* \"#utility.yul\":1856:1880   */\n      tag_76\n        /* \"#utility.yul\":1874:1879   */\n      dup2\n        /* \"#utility.yul\":1856:1880   */\n      tag_50\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1851:1854   */\n      dup3\n        /* \"#utility.yul\":1844:1881   */\n      mstore\n        /* \"#utility.yul\":1769:1887   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1893:2115   */\n    tag_24:\n        /* \"#utility.yul\":1986:1990   */\n      0x00\n        /* \"#utility.yul\":2024:2026   */\n      0x20\n        /* \"#utility.yul\":2013:2022   */\n      dup3\n        /* \"#utility.yul\":2009:2027   */\n      add\n        /* \"#utility.yul\":2001:2027   */\n      swap1\n      pop\n        /* \"#utility.yul\":2037:2108   */\n      tag_78\n        /* \"#utility.yul\":2105:2106   */\n      0x00\n        /* \"#utility.yul\":2094:2103   */\n      dup4\n        /* \"#utility.yul\":2090:2107   */\n      add\n        /* \"#utility.yul\":2081:2087   */\n      dup5\n        /* \"#utility.yul\":2037:2108   */\n      tag_51\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1893:2115   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c56ea55558d9969ef2596c3dc62cbe500d57ab25c35ffd4b793fad2d0421fdca64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506103af8061001c5f395ff3fe60806040526004361061004d575f3560e01c806312065fe0146100585780634d5b608b146100825780634f8632ba146100aa5780636f9fb98a146100d4578063ebc3eee8146100fe57610054565b3661005457005b5f80fd5b348015610063575f80fd5b5061006c610128565b604051610079919061029e565b60405180910390f35b34801561008d575f80fd5b506100a860048036038101906100a39190610315565b610166565b005b3480156100b5575f80fd5b506100be6101f7565b6040516100cb9190610360565b60405180910390f35b3480156100df575f80fd5b506100e861021a565b6040516100f5919061029e565b60405180910390f35b348015610109575f80fd5b50610112610221565b60405161011f9190610360565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b5f309050600a8273ffffffffffffffffffffffffffffffffffffffff16311080156101a85750600a8173ffffffffffffffffffffffffffffffffffffffff1631115b156101f3578173ffffffffffffffffffffffffffffffffffffffff166108fc600a90811502906040515f60405180830381858888f193505050501580156101f1573d5f803e3d5ffd5b505b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f47905090565b5f335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f819050919050565b61029881610286565b82525050565b5f6020820190506102b15f83018461028f565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102e4826102bb565b9050919050565b6102f4816102da565b81146102fe575f80fd5b50565b5f8135905061030f816102eb565b92915050565b5f6020828403121561032a576103296102b7565b5b5f61033784828501610301565b91505092915050565b5f61034a826102bb565b9050919050565b61035a81610340565b82525050565b5f6020820190506103735f830184610351565b9291505056fea2646970667358221220c56ea55558d9969ef2596c3dc62cbe500d57ab25c35ffd4b793fad2d0421fdca64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AF DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x4D5B608B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4F8632BA EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xEBC3EEE8 EQ PUSH2 0xFE JUMPI PUSH2 0x54 JUMP JUMPDEST CALLDATASIZE PUSH2 0x54 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP PUSH1 0xA DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT DUP1 ISZERO PUSH2 0x1A8 JUMPI POP PUSH1 0xA DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT JUMPDEST ISZERO PUSH2 0x1F3 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x286 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2DA JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x2EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x337 DUP5 DUP3 DUP6 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x34A DUP3 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x340 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x373 PUSH0 DUP4 ADD DUP5 PUSH2 0x351 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH15 0xA55558D9969EF2596C3DC62CBE500D JUMPI 0xAB 0x25 0xC3 PUSH0 REVERT 0x4B PUSH26 0x3FAD2D0421FDCA64736F6C634300081A00330000000000000000 ",
							"sourceMap": "704:711:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_72": {
									"entryPoint": null,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_26": {
									"entryPoint": 296,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getContractBalance_68": {
									"entryPoint": 538,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserAddress_17": {
									"entryPoint": 545,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@testTransfer_56": {
									"entryPoint": 358,
									"id": 56,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@user_4": {
									"entryPoint": 503,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2118:1",
										"nodeType": "YulBlock",
										"src": "0:2118:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "482:35:1",
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nativeSrc": "492:19:1",
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:1",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nativeSrc": "502:9:1",
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:1",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nativeSrc": "612:28:1",
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:1",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:1",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nativeSrc": "622:12:1",
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nativeSrc": "622:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nativeSrc": "735:28:1",
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:1",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:1",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nativeSrc": "745:12:1",
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nativeSrc": "745:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nativeSrc": "814:81:1",
													"nodeType": "YulBlock",
													"src": "814:81:1",
													"statements": [
														{
															"nativeSrc": "824:65:1",
															"nodeType": "YulAssignment",
															"src": "824:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:1",
																		"nodeType": "YulLiteral",
																		"src": "846:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																},
																"nativeSrc": "835:54:1",
																"nodeType": "YulFunctionCall",
																"src": "835:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:1",
														"nodeType": "YulTypedName",
														"src": "796:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:1",
														"nodeType": "YulTypedName",
														"src": "806:7:1",
														"type": ""
													}
												],
												"src": "769:126:1"
											},
											{
												"body": {
													"nativeSrc": "954:51:1",
													"nodeType": "YulBlock",
													"src": "954:51:1",
													"statements": [
														{
															"nativeSrc": "964:35:1",
															"nodeType": "YulAssignment",
															"src": "964:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "993:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "993:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "975:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "975:17:1"
																},
																"nativeSrc": "975:24:1",
																"nodeType": "YulFunctionCall",
																"src": "975:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "964:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "964:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "901:104:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "936:5:1",
														"nodeType": "YulTypedName",
														"src": "936:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "946:7:1",
														"nodeType": "YulTypedName",
														"src": "946:7:1",
														"type": ""
													}
												],
												"src": "901:104:1"
											},
											{
												"body": {
													"nativeSrc": "1062:87:1",
													"nodeType": "YulBlock",
													"src": "1062:87:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1127:16:1",
																"nodeType": "YulBlock",
																"src": "1127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1136:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1129:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1129:6:1"
																			},
																			"nativeSrc": "1129:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1129:12:1"
																		},
																		"nativeSrc": "1129:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1085:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1085:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1118:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1118:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1092:25:1",
																					"nodeType": "YulIdentifier",
																					"src": "1092:25:1"
																				},
																				"nativeSrc": "1092:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1092:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1082:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1082:2:1"
																		},
																		"nativeSrc": "1082:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1082:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1075:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1075:6:1"
																},
																"nativeSrc": "1075:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1075:51:1"
															},
															"nativeSrc": "1072:71:1",
															"nodeType": "YulIf",
															"src": "1072:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "1011:138:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1055:5:1",
														"nodeType": "YulTypedName",
														"src": "1055:5:1",
														"type": ""
													}
												],
												"src": "1011:138:1"
											},
											{
												"body": {
													"nativeSrc": "1215:95:1",
													"nodeType": "YulBlock",
													"src": "1215:95:1",
													"statements": [
														{
															"nativeSrc": "1225:29:1",
															"nodeType": "YulAssignment",
															"src": "1225:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1247:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1247:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1234:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1234:12:1"
																},
																"nativeSrc": "1234:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1234:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1225:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1225:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1298:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1298:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1263:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "1263:34:1"
																},
																"nativeSrc": "1263:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1263:41:1"
															},
															"nativeSrc": "1263:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1263:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "1155:155:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1201:3:1",
														"nodeType": "YulTypedName",
														"src": "1201:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1209:5:1",
														"nodeType": "YulTypedName",
														"src": "1209:5:1",
														"type": ""
													}
												],
												"src": "1155:155:1"
											},
											{
												"body": {
													"nativeSrc": "1390:271:1",
													"nodeType": "YulBlock",
													"src": "1390:271:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1436:83:1",
																"nodeType": "YulBlock",
																"src": "1436:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1438:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1438:77:1"
																			},
																			"nativeSrc": "1438:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1438:79:1"
																		},
																		"nativeSrc": "1438:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1438:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1411:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1411:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1420:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1420:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1407:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1407:3:1"
																		},
																		"nativeSrc": "1407:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1407:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1432:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1403:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1403:3:1"
																},
																"nativeSrc": "1403:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1403:32:1"
															},
															"nativeSrc": "1400:119:1",
															"nodeType": "YulIf",
															"src": "1400:119:1"
														},
														{
															"nativeSrc": "1529:125:1",
															"nodeType": "YulBlock",
															"src": "1529:125:1",
															"statements": [
																{
																	"nativeSrc": "1544:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1544:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1558:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1558:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1548:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1548:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1573:71:1",
																	"nodeType": "YulAssignment",
																	"src": "1573:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1616:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1616:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1627:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1627:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1612:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1612:3:1"
																				},
																				"nativeSrc": "1612:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1612:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1636:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1636:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "1583:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "1583:28:1"
																		},
																		"nativeSrc": "1583:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1573:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1573:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nativeSrc": "1316:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1360:9:1",
														"nodeType": "YulTypedName",
														"src": "1360:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1371:7:1",
														"nodeType": "YulTypedName",
														"src": "1371:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1383:6:1",
														"nodeType": "YulTypedName",
														"src": "1383:6:1",
														"type": ""
													}
												],
												"src": "1316:345:1"
											},
											{
												"body": {
													"nativeSrc": "1712:51:1",
													"nodeType": "YulBlock",
													"src": "1712:51:1",
													"statements": [
														{
															"nativeSrc": "1722:35:1",
															"nodeType": "YulAssignment",
															"src": "1722:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1751:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1751:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1733:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1733:17:1"
																},
																"nativeSrc": "1733:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1733:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1722:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1722:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1667:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1694:5:1",
														"nodeType": "YulTypedName",
														"src": "1694:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1704:7:1",
														"nodeType": "YulTypedName",
														"src": "1704:7:1",
														"type": ""
													}
												],
												"src": "1667:96:1"
											},
											{
												"body": {
													"nativeSrc": "1834:53:1",
													"nodeType": "YulBlock",
													"src": "1834:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1851:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1851:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1874:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1874:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1856:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1856:17:1"
																		},
																		"nativeSrc": "1856:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1856:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1844:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:1"
																},
																"nativeSrc": "1844:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1844:37:1"
															},
															"nativeSrc": "1844:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1844:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1769:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1822:5:1",
														"nodeType": "YulTypedName",
														"src": "1822:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1829:3:1",
														"nodeType": "YulTypedName",
														"src": "1829:3:1",
														"type": ""
													}
												],
												"src": "1769:118:1"
											},
											{
												"body": {
													"nativeSrc": "1991:124:1",
													"nodeType": "YulBlock",
													"src": "1991:124:1",
													"statements": [
														{
															"nativeSrc": "2001:26:1",
															"nodeType": "YulAssignment",
															"src": "2001:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2024:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2024:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2009:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2009:3:1"
																},
																"nativeSrc": "2009:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2009:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2001:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2001:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2081:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2081:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2094:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2094:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2105:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2105:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2090:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2090:3:1"
																		},
																		"nativeSrc": "2090:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2090:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2037:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2037:43:1"
																},
																"nativeSrc": "2037:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2037:71:1"
															},
															"nativeSrc": "2037:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2037:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1893:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1963:9:1",
														"nodeType": "YulTypedName",
														"src": "1963:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1975:6:1",
														"nodeType": "YulTypedName",
														"src": "1975:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1986:4:1",
														"nodeType": "YulTypedName",
														"src": "1986:4:1",
														"type": ""
													}
												],
												"src": "1893:222:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004d575f3560e01c806312065fe0146100585780634d5b608b146100825780634f8632ba146100aa5780636f9fb98a146100d4578063ebc3eee8146100fe57610054565b3661005457005b5f80fd5b348015610063575f80fd5b5061006c610128565b604051610079919061029e565b60405180910390f35b34801561008d575f80fd5b506100a860048036038101906100a39190610315565b610166565b005b3480156100b5575f80fd5b506100be6101f7565b6040516100cb9190610360565b60405180910390f35b3480156100df575f80fd5b506100e861021a565b6040516100f5919061029e565b60405180910390f35b348015610109575f80fd5b50610112610221565b60405161011f9190610360565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b5f309050600a8273ffffffffffffffffffffffffffffffffffffffff16311080156101a85750600a8173ffffffffffffffffffffffffffffffffffffffff1631115b156101f3578173ffffffffffffffffffffffffffffffffffffffff166108fc600a90811502906040515f60405180830381858888f193505050501580156101f1573d5f803e3d5ffd5b505b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f47905090565b5f335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f819050919050565b61029881610286565b82525050565b5f6020820190506102b15f83018461028f565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102e4826102bb565b9050919050565b6102f4816102da565b81146102fe575f80fd5b50565b5f8135905061030f816102eb565b92915050565b5f6020828403121561032a576103296102b7565b5b5f61033784828501610301565b91505092915050565b5f61034a826102bb565b9050919050565b61035a81610340565b82525050565b5f6020820190506103735f830184610351565b9291505056fea2646970667358221220c56ea55558d9969ef2596c3dc62cbe500d57ab25c35ffd4b793fad2d0421fdca64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4D JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x58 JUMPI DUP1 PUSH4 0x4D5B608B EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4F8632BA EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xEBC3EEE8 EQ PUSH2 0xFE JUMPI PUSH2 0x54 JUMP JUMPDEST CALLDATASIZE PUSH2 0x54 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x166 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8 PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP PUSH1 0xA DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT DUP1 ISZERO PUSH2 0x1A8 JUMPI POP PUSH1 0xA DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE GT JUMPDEST ISZERO PUSH2 0x1F3 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x286 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B1 PUSH0 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2E4 DUP3 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2DA JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30F DUP2 PUSH2 0x2EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x337 DUP5 DUP3 DUP6 ADD PUSH2 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x34A DUP3 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35A DUP2 PUSH2 0x340 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x373 PUSH0 DUP4 ADD DUP5 PUSH2 0x351 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH15 0xA55558D9969EF2596C3DC62CBE500D JUMPI 0xAB 0x25 0xC3 PUSH0 REVERT 0x4B PUSH26 0x3FAD2D0421FDCA64736F6C634300081A00330000000000000000 ",
							"sourceMap": "704:711:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;983:234;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;728:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1225:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;756:128;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;892:85;934:4;957;;;;;;;;;;;:12;;;950:19;;892:85;:::o;983:234::-;1042:17;1068:4;1042:31;;1099:2;1087:1;:9;;;:14;:39;;;;;1124:2;1105:9;:17;;;:21;1087:39;1084:126;;;1143:1;:10;;:14;1154:2;1143:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:126;1031:186;983:234;:::o;728:19::-;;;;;;;;;;;;:::o;1225:104::-;1276:4;1300:21;1293:28;;1225:104;:::o;756:128::-;799:7;838:10;833:4;;:15;;;;;;;;;;;;;;;;;;870:4;;;;;;;;;;863:11;;756:128;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:104::-;946:7;975:24;993:5;975:24;:::i;:::-;964:35;;901:104;;;:::o;1011:138::-;1092:32;1118:5;1092:32;:::i;:::-;1085:5;1082:43;1072:71;;1139:1;1136;1129:12;1072:71;1011:138;:::o;1155:155::-;1209:5;1247:6;1234:20;1225:29;;1263:41;1298:5;1263:41;:::i;:::-;1155:155;;;;:::o;1316:345::-;1383:6;1432:2;1420:9;1411:7;1407:23;1403:32;1400:119;;;1438:79;;:::i;:::-;1400:119;1558:1;1583:61;1636:7;1627:6;1616:9;1612:22;1583:61;:::i;:::-;1573:71;;1529:125;1316:345;;;;:::o;1667:96::-;1704:7;1733:24;1751:5;1733:24;:::i;:::-;1722:35;;1667:96;;;:::o;1769:118::-;1856:24;1874:5;1856:24;:::i;:::-;1851:3;1844:37;1769:118;;:::o;1893:222::-;1986:4;2024:2;2013:9;2009:18;2001:26;;2037:71;2105:1;2094:9;2090:17;2081:6;2037:71;:::i;:::-;1893:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "188600",
								"executionCost": "230",
								"totalCost": "188830"
							},
							"external": {
								"getBalance()": "5051",
								"getContractBalance()": "378",
								"getUserAddress()": "26843",
								"testTransfer(address)": "infinite",
								"user()": "2527"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 704,
									"end": 1415,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c56ea55558d9969ef2596c3dc62cbe500d57ab25c35ffd4b793fad2d0421fdca64736f6c634300081a0033",
									".code": [
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "4D5B608B"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "4F8632BA"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "6F9FB98A"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "EBC3EEE8"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 1415,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 892,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 892,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 983,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 983,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 728,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 728,
											"end": 747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1225,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1225,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 756,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 756,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 892,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 957,
											"end": 961,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 957,
											"end": 961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 957,
											"end": 969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 957,
											"end": 969,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 950,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 950,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 892,
											"end": 977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1072,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1042,
											"end": 1073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1096,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1122,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 1105,
											"end": 1126,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1087,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1084,
											"end": 1210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 1154,
											"end": 1156,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1143,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1210,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1084,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1031,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 983,
											"end": 1217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 728,
											"end": 747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 728,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1321,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 756,
											"end": 884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 799,
											"end": 806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 838,
											"end": 848,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 833,
											"end": 848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 870,
											"end": 874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 874,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 870,
											"end": 874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 870,
											"end": 874,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 870,
											"end": 874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 863,
											"end": 874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 863,
											"end": 874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 756,
											"end": 884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 993,
											"end": 998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 975,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 975,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 975,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 975,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 964,
											"end": 999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 901,
											"end": 1005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1149,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1011,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1092,
											"end": 1124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1092,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1125,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1141,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1072,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1254,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1298,
											"end": 1303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1263,
											"end": 1304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1263,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1438,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1438,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1400,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1636,
											"end": 1643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1625,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1583,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1583,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1763,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1667,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1733,
											"end": 1757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1757,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1733,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1887,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1769,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1874,
											"end": 1879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1856,
											"end": 1880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1856,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2115,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1893,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2026,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2105,
											"end": 2106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2037,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2108,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2037,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2115,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1893,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"test/使用地址类型.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"getContractBalance()": "6f9fb98a",
							"getUserAddress()": "ebc3eee8",
							"testTransfer(address)": "4d5b608b",
							"user()": "4f8632ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"x\",\"type\":\"address\"}],\"name\":\"testTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"user\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u5730\\u5740\\u7c7b\\u578b\\u6709\\u4e24\\u79cd\\uff1a address\\uff1a\\u4fdd\\u5b58\\u4e00\\u4e2a20\\u5b57\\u8282\\u7684\\u503c\\uff08\\u4ee5\\u592a\\u574a\\u5730\\u5740\\u7684\\u5927\\u5c0f\\uff09\\u3002 address payable\\uff1a\\u8868\\u793a\\u53ef\\u652f\\u4ed8\\u5730\\u5740\\uff08\\u53ef\\u63a5\\u53d7\\u4ee5\\u592a\\u5e01\\u7684\\u5730\\u5740\\uff09\\uff0c\\u5728\\u5730\\u5740\\u683c\\u5f0f\\u4e0a\\uff0c\\u5176\\u5b9e\\u4e0eaddress \\u5b8c\\u5168\\u76f8\\u540c\\uff0c\\u4e5f\\u662f20\\u5b57\\u8282\\u3002 \\u5728\\u7f16\\u5199\\u5408\\u7ea6\\u65f6\\uff0c\\u5927\\u90e8\\u5206\\u65f6\\u5019\\uff0c\\u4f7f\\u7528address\\u5c31\\u597d\\uff0c\\u5f53\\u9700\\u8981\\u5411\\u5730\\u5740\\u8f6c\\u8d26\\u65f6\\uff0c\\u53ef\\u4ee5\\u4f7f\\u7528\\u4ee5\\u4e0b\\u4ee3\\u7801\\u628aaddress \\u8f6c\\u6362\\u4e3aaddress payable \\uff1a address payable ap = payable(addr); address payable\\u62e5\\u6709\\u7684\\u4e24\\u4e2a\\u6210\\u5458\\u51fd\\u6570transfer\\u548csend \\uff08address \\u6ca1\\u6709\\u8fd9\\u4e24\\u4e2a\\u65b9\\u6cd5\\uff09\\uff0ctransfer\\u548csend \\u7684\\u4f5c\\u7528\\u662f\\u5411\\u8be5\\u5730\\u5740\\u8f6c\\u8d26\\uff0c\\u4e0b\\u6587\\u4f1a\\u8fdb\\u4e00\\u6b65\\u4ecb\\u7ecd\\u3002*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/\\u4f7f\\u7528\\u5730\\u5740\\u7c7b\\u578b.sol\":\"testAddr\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/\\u4f7f\\u7528\\u5730\\u5740\\u7c7b\\u578b.sol\":{\"keccak256\":\"0x75fc35758fa41dbbbe5f3ad753dfb68e793f57379097084be1940d753920d5b4\",\"urls\":[\"bzz-raw://d4797885ee82ba2c2221569903a2157602e64a3565be501f13fb5c9e439186d0\",\"dweb:/ipfs/QmXh4wfbL2VwADz6TpeFBg91iSkp9tdpTQV1BcDUAxQ9u6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "test/使用地址类型.sol:testAddr",
								"label": "user",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "地址类型有两种： address：保存一个20字节的值（以太坊地址的大小）。 address payable：表示可支付地址（可接受以太币的地址），在地址格式上，其实与address 完全相同，也是20字节。 在编写合约时，大部分时候，使用address就好，当需要向地址转账时，可以使用以下代码把address 转换为address payable ： address payable ap = payable(addr); address payable拥有的两个成员函数transfer和send （address 没有这两个方法），transfer和send 的作用是向该地址转账，下文会进一步介绍。*",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test/使用地址类型.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test/使用地址类型.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/使用地址类型.sol": {
				"ast": {
					"absolutePath": "test/使用地址类型.sol",
					"exportedSymbols": {
						"testAddr": [
							73
						]
					},
					"id": 74,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"~",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "testAddr",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:640:0",
								"text": "地址类型有两种：\naddress：保存一个20字节的值（以太坊地址的大小）。\naddress payable：表示可支付地址（可接受以太币的地址），在地址格式上，其实与address 完全相同，也是20字节。\n在编写合约时，大部分时候，使用address就好，当需要向地址转账时，可以使用以下代码把address 转换为address payable ：\naddress payable ap = payable(addr);\naddress payable拥有的两个成员函数transfer和send （address 没有这两个方法），transfer和send 的作用是向该地址转账，下文会进一步介绍。*"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "testAddr",
							"nameLocation": "713:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4f8632ba",
									"id": 4,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "743:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 73,
									"src": "728:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "728:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "808:76:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 9,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "833:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 10,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "838:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "842:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "838:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "833:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "833:15:0"
											},
											{
												"expression": {
													"id": 14,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 8,
												"id": 15,
												"nodeType": "Return",
												"src": "863:11:0"
											}
										]
									},
									"functionSelector": "ebc3eee8",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAddress",
									"nameLocation": "765:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:0"
									},
									"scope": 73,
									"src": "756:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "939:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 22,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "957:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "962:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "957:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 21,
												"id": 24,
												"nodeType": "Return",
												"src": "950:19:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "901:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "934:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "934:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:6:0"
									},
									"scope": 73,
									"src": "892:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1031:186:0",
										"statements": [
											{
												"assignments": [
													32
												],
												"declarations": [
													{
														"constant": false,
														"id": 32,
														"mutability": "mutable",
														"name": "myAddress",
														"nameLocation": "1050:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "1042:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 31,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1042:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"arguments": [
														{
															"id": 35,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1068:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_testAddr_$73",
																"typeString": "contract testAddr"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_testAddr_$73",
																"typeString": "contract testAddr"
															}
														],
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1060:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 33,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1060:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1060:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1042:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 38,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1087:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1089:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1087:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3130",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1099:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "1087:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 42,
																"name": "myAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "1105:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1115:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "1105:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "3130",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1124:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "1105:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1087:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "IfStatement",
												"src": "1084:126:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "1128:82:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "3130",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1154:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		}
																	],
																	"expression": {
																		"id": 47,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "1143:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 49,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1145:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1143:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1143:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 52,
															"nodeType": "ExpressionStatement",
															"src": "1143:14:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4d5b608b",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testTransfer",
									"nameLocation": "992:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1021:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1005:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1005:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1004:19:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1031:0:0"
									},
									"scope": 73,
									"src": "983:234:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1282:47:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 63,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1308:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_testAddr_$73",
																	"typeString": "contract testAddr"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_testAddr_$73",
																	"typeString": "contract testAddr"
																}
															],
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 61,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1300:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1300:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1314:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1300:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "1293:28:0"
											}
										]
									},
									"functionSelector": "6f9fb98a",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getContractBalance",
									"nameLocation": "1234:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1276:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1276:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:6:0"
									},
									"scope": 73,
									"src": "1225:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1364:40:0",
										"statements": []
									},
									"id": 72,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1364:0:0"
									},
									"scope": 73,
									"src": "1337:67:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 74,
							"src": "704:711:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1383:0"
				},
				"id": 0
			}
		}
	}
}