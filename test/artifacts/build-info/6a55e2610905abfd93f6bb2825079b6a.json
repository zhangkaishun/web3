{
	"id": "6a55e2610905abfd93f6bb2825079b6a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/接口及合约交互.sol": {
				"content": "// SPDX-Licence-Identifier: MIT\r\npragma solidity ~0.8.20;\r\n\r\n\r\n/** \r\n\r\n接口的作用主要体现在以下几个方面：\r\n\r\n规范行为：接口定义了一组方法，要求实现这个接口的合约必须提供这些方法的具体实现。通过实现接口，可以确保一组合约拥有相同的方法，并且这些方法的功能和行为是一致的，从而增强了代码的一致性和可预测性。\r\n\r\n解耦合：接口可以将定义方法的部分与具体实现合约分离，从而实现了解耦合。因此我们可以基于接口来进行合约间的相互调用， 而不是基于实现。\r\n\r\n**/\r\ninterface ICounter {\r\n    //接口中的所有方法都是隐含的 virtual 方法，因此即便没有 virtual，也可以被重写。\r\n\r\n\r\n    function increment() external ;\r\n}\r\n\r\ncontract Counter is ICounter {\r\n    uint public count;\r\n    function increment() external override {\r\n        count+=1;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"test/接口及合约交互.sol": {
				"Counter": {
					"abi": [
						{
							"inputs": [],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":809:940  contract Counter is ICounter {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":809:940  contract Counter is ICounter {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06661abd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":845:862  uint public count */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":869:935  function increment() external override {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":845:862  uint public count */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":869:935  function increment() external override {... */\n    tag_10:\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":926:927  1 */\n      0x01\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":919:924  count */\n      0x00\n      dup1\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":919:927  count+=1 */\n      dup3\n      dup3\n      sload\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"test/\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\x8f\\x8a\\xe5\\x90\\x88\\xe7\\xba\\xa6\\xe4\\xba\\xa4\\xe4\\xba\\x92.sol\":869:935  function increment() external override {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_14:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_15:\n        /* \"#utility.yul\":177:201   */\n      tag_20\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_14\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_22\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_15\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_16:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x11\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:819   */\n    tag_13:\n        /* \"#utility.yul\":668:671   */\n      0x00\n        /* \"#utility.yul\":687:707   */\n      tag_25\n        /* \"#utility.yul\":705:706   */\n      dup3\n        /* \"#utility.yul\":687:707   */\n      tag_14\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":682:707   */\n      swap2\n      pop\n        /* \"#utility.yul\":721:741   */\n      tag_26\n        /* \"#utility.yul\":739:740   */\n      dup4\n        /* \"#utility.yul\":721:741   */\n      tag_14\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":716:741   */\n      swap3\n      pop\n        /* \"#utility.yul\":764:765   */\n      dup3\n        /* \"#utility.yul\":761:762   */\n      dup3\n        /* \"#utility.yul\":757:766   */\n      add\n        /* \"#utility.yul\":750:766   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:788   */\n      dup1\n        /* \"#utility.yul\":782:783   */\n      dup3\n        /* \"#utility.yul\":779:789   */\n      gt\n        /* \"#utility.yul\":776:812   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":792:810   */\n      tag_28\n      tag_16\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":776:812   */\n    tag_27:\n        /* \"#utility.yul\":628:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122086e868752dfa7fb91ca8798b0748d8d43c5f7123b72d8c50bb78b21adae0e68364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101468061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c806306661abd14610038578063d09de08a14610056575b5f80fd5b610040610060565b60405161004d9190610097565b60405180910390f35b61005e610065565b005b5f5481565b60015f8082825461007691906100dd565b92505081905550565b5f819050919050565b6100918161007f565b82525050565b5f6020820190506100aa5f830184610088565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6100e78261007f565b91506100f28361007f565b925082820190508082111561010a576101096100b0565b5b9291505056fea264697066735822122086e868752dfa7fb91ca8798b0748d8d43c5f7123b72d8c50bb78b21adae0e68364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91 DUP2 PUSH2 0x7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA PUSH0 DUP4 ADD DUP5 PUSH2 0x88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE7 DUP3 PUSH2 0x7F JUMP JUMPDEST SWAP2 POP PUSH2 0xF2 DUP4 PUSH2 0x7F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0xB0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE8 PUSH9 0x752DFA7FB91CA8798B SMOD BASEFEE 0xD8 0xD4 EXTCODECOPY PUSH0 PUSH18 0x23B72D8C50BB78B21ADAE0E68364736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "809:131:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@count_10": {
									"entryPoint": 96,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increment_19": {
									"entryPoint": 101,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:822:1",
										"nodeType": "YulBlock",
										"src": "0:822:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "470:152:1",
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:1",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:77:1",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nativeSrc": "480:88:1",
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nativeSrc": "480:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:1",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nativeSrc": "577:15:1",
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nativeSrc": "577:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:4:1",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:15:1",
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nativeSrc": "601:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "442:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nativeSrc": "672:147:1",
													"nodeType": "YulBlock",
													"src": "672:147:1",
													"statements": [
														{
															"nativeSrc": "682:25:1",
															"nodeType": "YulAssignment",
															"src": "682:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "705:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "705:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "687:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "687:17:1"
																},
																"nativeSrc": "687:20:1",
																"nodeType": "YulFunctionCall",
																"src": "687:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "682:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "682:1:1"
																}
															]
														},
														{
															"nativeSrc": "716:25:1",
															"nodeType": "YulAssignment",
															"src": "716:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "739:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "739:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "721:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "721:17:1"
																},
																"nativeSrc": "721:20:1",
																"nodeType": "YulFunctionCall",
																"src": "721:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "716:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "716:1:1"
																}
															]
														},
														{
															"nativeSrc": "750:16:1",
															"nodeType": "YulAssignment",
															"src": "750:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "761:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "761:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "764:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "764:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "757:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:1"
																},
																"nativeSrc": "757:9:1",
																"nodeType": "YulFunctionCall",
																"src": "757:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "790:22:1",
																"nodeType": "YulBlock",
																"src": "790:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "792:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:16:1"
																			},
																			"nativeSrc": "792:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "792:18:1"
																		},
																		"nativeSrc": "792:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "792:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "782:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "782:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "785:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "785:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "779:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "779:2:1"
																},
																"nativeSrc": "779:10:1",
																"nodeType": "YulFunctionCall",
																"src": "779:10:1"
															},
															"nativeSrc": "776:36:1",
															"nodeType": "YulIf",
															"src": "776:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "628:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "659:1:1",
														"nodeType": "YulTypedName",
														"src": "659:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "662:1:1",
														"nodeType": "YulTypedName",
														"src": "662:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "668:3:1",
														"nodeType": "YulTypedName",
														"src": "668:3:1",
														"type": ""
													}
												],
												"src": "628:191:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c806306661abd14610038578063d09de08a14610056575b5f80fd5b610040610060565b60405161004d9190610097565b60405180910390f35b61005e610065565b005b5f5481565b60015f8082825461007691906100dd565b92505081905550565b5f819050919050565b6100918161007f565b82525050565b5f6020820190506100aa5f830184610088565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6100e78261007f565b91506100f28361007f565b925082820190508082111561010a576101096100b0565b5b9291505056fea264697066735822122086e868752dfa7fb91ca8798b0748d8d43c5f7123b72d8c50bb78b21adae0e68364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x76 SWAP2 SWAP1 PUSH2 0xDD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91 DUP2 PUSH2 0x7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAA PUSH0 DUP4 ADD DUP5 PUSH2 0x88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE7 DUP3 PUSH2 0x7F JUMP JUMPDEST SWAP2 POP PUSH2 0xF2 DUP4 PUSH2 0x7F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10A JUMPI PUSH2 0x109 PUSH2 0xB0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xE8 PUSH9 0x752DFA7FB91CA8798B SMOD BASEFEE 0xD8 0xD4 EXTCODECOPY PUSH0 PUSH18 0x23B72D8C50BB78B21ADAE0E68364736F6C63 NUMBER STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "809:131:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;869:66;;;:::i;:::-;;845:17;;;;:::o;869:66::-;926:1;919:5;;:8;;;;;;;:::i;:::-;;;;;;;;869:66::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:191;668:3;687:20;705:1;687:20;:::i;:::-;682:25;;721:20;739:1;721:20;:::i;:::-;716:25;;764:1;761;757:9;750:16;;785:3;782:1;779:10;776:36;;;792:18;;:::i;:::-;776:36;628:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "65200",
								"executionCost": "115",
								"totalCost": "65315"
							},
							"external": {
								"count()": "2402",
								"increment()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 809,
									"end": 940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 940,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122086e868752dfa7fb91ca8798b0748d8d43c5f7123b72d8c50bb78b21adae0e68364736f6c634300081a0033",
									".code": [
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "6661ABD"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "D09DE08A"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 809,
											"end": 940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 845,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 845,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 869,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 869,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 869,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 869,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 869,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 869,
											"end": 935,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 862,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 845,
											"end": 862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 869,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 926,
											"end": 927,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 919,
											"end": 927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 919,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 919,
											"end": 927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 919,
											"end": 927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 869,
											"end": 935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 705,
											"end": 706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 687,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 687,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 687,
											"end": 707,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 687,
											"end": 707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 682,
											"end": 707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 682,
											"end": 707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 721,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 741,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 716,
											"end": 741,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 716,
											"end": 741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 764,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 761,
											"end": 762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 750,
											"end": 766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 785,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 779,
											"end": 789,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 792,
											"end": 810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 792,
											"end": 810,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 792,
											"end": 810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 776,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 776,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"test/接口及合约交互.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"count()": "06661abd",
							"increment()": "d09de08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/\\u63a5\\u53e3\\u53ca\\u5408\\u7ea6\\u4ea4\\u4e92.sol\":\"Counter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/\\u63a5\\u53e3\\u53ca\\u5408\\u7ea6\\u4ea4\\u4e92.sol\":{\"keccak256\":\"0x900ce6f1dd74b1e1ff2111699a1664f831a4c93ac1bc97644aa4e541e0d958c9\",\"urls\":[\"bzz-raw://c07efbb90925fdbbc78df37ac13a5b0ccf8c4db337252b4199b9a9734f7e2c03\",\"dweb:/ipfs/Qmdt43kaHeAJLBQhC4yZb4dDnhMPjfzFEyXaCwANc9WAmh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "test/接口及合约交互.sol:Counter",
								"label": "count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICounter": {
					"abi": [
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"increment()": "d09de08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"\\u63a5\\u53e3\\u7684\\u4f5c\\u7528\\u4e3b\\u8981\\u4f53\\u73b0\\u5728\\u4ee5\\u4e0b\\u51e0\\u4e2a\\u65b9\\u9762\\uff1a \\u89c4\\u8303\\u884c\\u4e3a\\uff1a\\u63a5\\u53e3\\u5b9a\\u4e49\\u4e86\\u4e00\\u7ec4\\u65b9\\u6cd5\\uff0c\\u8981\\u6c42\\u5b9e\\u73b0\\u8fd9\\u4e2a\\u63a5\\u53e3\\u7684\\u5408\\u7ea6\\u5fc5\\u987b\\u63d0\\u4f9b\\u8fd9\\u4e9b\\u65b9\\u6cd5\\u7684\\u5177\\u4f53\\u5b9e\\u73b0\\u3002\\u901a\\u8fc7\\u5b9e\\u73b0\\u63a5\\u53e3\\uff0c\\u53ef\\u4ee5\\u786e\\u4fdd\\u4e00\\u7ec4\\u5408\\u7ea6\\u62e5\\u6709\\u76f8\\u540c\\u7684\\u65b9\\u6cd5\\uff0c\\u5e76\\u4e14\\u8fd9\\u4e9b\\u65b9\\u6cd5\\u7684\\u529f\\u80fd\\u548c\\u884c\\u4e3a\\u662f\\u4e00\\u81f4\\u7684\\uff0c\\u4ece\\u800c\\u589e\\u5f3a\\u4e86\\u4ee3\\u7801\\u7684\\u4e00\\u81f4\\u6027\\u548c\\u53ef\\u9884\\u6d4b\\u6027\\u3002 \\u89e3\\u8026\\u5408\\uff1a\\u63a5\\u53e3\\u53ef\\u4ee5\\u5c06\\u5b9a\\u4e49\\u65b9\\u6cd5\\u7684\\u90e8\\u5206\\u4e0e\\u5177\\u4f53\\u5b9e\\u73b0\\u5408\\u7ea6\\u5206\\u79bb\\uff0c\\u4ece\\u800c\\u5b9e\\u73b0\\u4e86\\u89e3\\u8026\\u5408\\u3002\\u56e0\\u6b64\\u6211\\u4eec\\u53ef\\u4ee5\\u57fa\\u4e8e\\u63a5\\u53e3\\u6765\\u8fdb\\u884c\\u5408\\u7ea6\\u95f4\\u7684\\u76f8\\u4e92\\u8c03\\u7528\\uff0c \\u800c\\u4e0d\\u662f\\u57fa\\u4e8e\\u5b9e\\u73b0\\u3002*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/\\u63a5\\u53e3\\u53ca\\u5408\\u7ea6\\u4ea4\\u4e92.sol\":\"ICounter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/\\u63a5\\u53e3\\u53ca\\u5408\\u7ea6\\u4ea4\\u4e92.sol\":{\"keccak256\":\"0x900ce6f1dd74b1e1ff2111699a1664f831a4c93ac1bc97644aa4e541e0d958c9\",\"urls\":[\"bzz-raw://c07efbb90925fdbbc78df37ac13a5b0ccf8c4db337252b4199b9a9734f7e2c03\",\"dweb:/ipfs/Qmdt43kaHeAJLBQhC4yZb4dDnhMPjfzFEyXaCwANc9WAmh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "接口的作用主要体现在以下几个方面： 规范行为：接口定义了一组方法，要求实现这个接口的合约必须提供这些方法的具体实现。通过实现接口，可以确保一组合约拥有相同的方法，并且这些方法的功能和行为是一致的，从而增强了代码的一致性和可预测性。 解耦合：接口可以将定义方法的部分与具体实现合约分离，从而实现了解耦合。因此我们可以基于接口来进行合约间的相互调用， 而不是基于实现。*",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test/接口及合约交互.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test/接口及合约交互.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/接口及合约交互.sol": {
				"ast": {
					"absolutePath": "test/接口及合约交互.sol",
					"exportedSymbols": {
						"Counter": [
							20
						],
						"ICounter": [
							6
						]
					},
					"id": 21,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"~",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ICounter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "63:561:0",
								"text": "接口的作用主要体现在以下几个方面：\n规范行为：接口定义了一组方法，要求实现这个接口的合约必须提供这些方法的具体实现。通过实现接口，可以确保一组合约拥有相同的方法，并且这些方法的功能和行为是一致的，从而增强了代码的一致性和可预测性。\n解耦合：接口可以将定义方法的部分与具体实现合约分离，从而实现了解耦合。因此我们可以基于接口来进行合约间的相互调用， 而不是基于实现。*"
							},
							"fullyImplemented": false,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "ICounter",
							"nameLocation": "636:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d09de08a",
									"id": 5,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "780:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:0"
									},
									"returnParameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:0:0"
									},
									"scope": 6,
									"src": "771:31:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "626:179:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "ICounter",
										"nameLocations": [
											"829:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 6,
										"src": "829:8:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "829:8:0"
								}
							],
							"canonicalName": "Counter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20,
								6
							],
							"name": "Counter",
							"nameLocation": "818:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06661abd",
									"id": 10,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "857:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 20,
									"src": "845:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "845:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										5
									],
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "908:27:0",
										"statements": [
											{
												"expression": {
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "919:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "926:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "919:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "919:8:0"
											}
										]
									},
									"functionSelector": "d09de08a",
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "878:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 12,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "899:8:0"
									},
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:0:0"
									},
									"scope": 20,
									"src": "869:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 21,
							"src": "809:131:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:907:0"
				},
				"id": 0
			}
		}
	}
}