{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "testSend",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "transferTest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "transfer() 特点： gas 限制：2300（仅适用于 fallback 或 receive ） 失败时会自动 revert（交易回滚） 推荐使用，因为它更安全 2. send() ool success = addr.send(amount); require(success, \"Send failed\"); ✅ 特点： gas 限制：2300 不会自动回滚，只会返回 true/false 需要手动检查返回值（否则可能丢失资金） call.value()（更灵活但风险更高） (bool success, ) = addr.call{value: amount}(\"\"); require(success, \"Call failed\"); 特点： 无 gas 限制（可以消耗比 2300 更多的 gas） 推荐用于 call 复杂合约 比 transfer() 和 send() 更危险，可能导致重入攻击*",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"test/send与transfer区别.sol": "TestSendAndTransfer"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"test/send与transfer区别.sol": {
			"keccak256": "0x961ebd8c502fb3cddf1b827e9bffda3553ecd03adf689ee226c345daf00e50d9",
			"urls": [
				"bzz-raw://9b7f4d184e085536183504ba14fb7618e2d3fda42b4f16724acb627bba1d873e",
				"dweb:/ipfs/QmV56RRUM3hcppUnq5zkevAs6absDZ7wrSLJCRRJLoduE9"
			]
		}
	},
	"version": 1
}