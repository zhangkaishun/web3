{
	"id": "8ac6bebd7bd7fd8a1cf1144e17664c5c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/可升级合约/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract Proxy {\r\n    // 固定的 IMPLEMENTATION_SLOT 常量，通过 keccak256 计算后硬编码\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = \r\n        0x3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe;  // 这是 keccak256(\"eip1967.proxy.implementation\") 的值\r\n\r\n    event Upgraded(address indexed newImplementation);\r\n\r\n    constructor(address _logic) {\r\n        _setImplementation(_logic);\r\n    }\r\n\r\n    function _getImplementation() internal view returns (address impl) {\r\n        assembly {\r\n            // 使用已预计算的 IMPLEMENTATION_SLOT 常量\r\n            impl := sload(_IMPLEMENTATION_SLOT)\r\n        }\r\n    }\r\n\r\n    function _setImplementation(address newImplementation) internal {\r\n        assembly {\r\n            // 使用已预计算的 IMPLEMENTATION_SLOT 常量\r\n            sstore(_IMPLEMENTATION_SLOT, newImplementation)\r\n        }\r\n    }\r\n\r\n    function upgradeTo(address newImplementation) external {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    fallback() external payable {\r\n        address impl = _getImplementation();\r\n        require(impl != address(0), \"Implementation not set\");\r\n\r\n\r\n        /** \r\n\r\n         let ptr := mload(0x40)\r\n作用：这行代码将 0x40 位置的数据加载到 ptr 变量中。\r\n\r\nmload(0x40) 获取的是 \"free memory pointer\"，即指向 Solidity 存储中下一个空闲内存位置的指针。Solidity 使用 0x40 作为其内存管理的特殊位置。\r\n\r\n通过该指针，可以动态地管理内存，避免固定内存位置的冲突。\r\n\r\n2. calldatacopy(ptr, 0, calldatasize())\r\n作用：这行代码将调用数据（calldata）复制到内存中的 ptr 所指向的位置。\r\n\r\ncalldatacopy 是一个内联汇编函数，它将从 calldata 中复制数据到内存中。\r\n\r\nptr 是目标内存位置（前面我们加载了“free memory pointer”）。\r\n\r\n0 是 calldata 的偏移量（从 calldata 的开始处开始复制）。\r\n\r\ncalldatasize() 返回调用数据的大小，也就是我们要复制的数据长度。\r\n\r\n3. let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)\r\n作用：使用 delegatecall 执行目标合约的代码，并传递调用数据。\r\n\r\ndelegatecall 是一个特殊的操作，它将合约的代码执行委托给另一个合约，并且调用者的 storage 和 msg.sender 等信息不会变化，只会执行目标合约的代码。\r\n\r\ngas()：将剩余的 gas 传递给目标合约。\r\n\r\nimpl：目标合约的地址（通常是存储在代理合约中的实现合约地址）。\r\n\r\nptr：复制的调用数据的内存位置。\r\n\r\n    calldatasize()：调用数据的大小，即从调用中传递的参数的长度。\r\n\r\n    0, 0：这两个参数表示返回数据的内存位置（返回数据会存储在 0 位置，但这里我们暂时不关心具体位置）。\r\n\r\n    delegatecall 会返回一个布尔值 result，如果执行成功，则 result 为 1，否则为 0。\r\n\r\n    4. let size := returndatasize()\r\n    作用：获取返回数据的大小。\r\n\r\n    returndatasize() 返回由目标合约执行后返回的数据的大小。\r\n\r\n    5. returndatacopy(ptr, 0, size)\r\n    作用：将目标合约返回的数据复制到内存中的 ptr 指向的地址。\r\n\r\n    returndatacopy 是一个内联汇编函数，它将返回数据从 0 位置复制到 ptr 所指向的位置，复制的长度为 size。\r\n\r\n    6. mstore(0x40, add(ptr, size))\r\n    作用：更新 \"free memory pointer\"。\r\n\r\n    mstore(0x40, add(ptr, size)) 这行代码更新了 0x40 的指针，将其移动到新的空闲内存位置。具体来说，它将指针移动到 ptr + size，即返回数据后面的空闲内存区域。\r\n\r\n    7. switch result\r\n    作用：根据 delegatecall 的执行结果，判断是返回数据还是发生错误。\r\n\r\n    switch result 是根据 result 的值（它是 delegatecall 的返回值）来判断是否成功执行。\r\n\r\n    8. case 0 { revert(ptr, size) }\r\n    作用：如果 result 为 0，说明 delegatecall 执行失败，合约会调用 revert。\r\n\r\n    revert(ptr, size) 将复制返回数据并回滚交易，这样外部调用者会收到错误信息。\r\n\r\n    9. default { return(ptr, size) }\r\n    作用：如果 result 为非 0（即执行成功），则会将目标合约的返回数据返回给调用者。\r\n\r\n    return(ptr, size) 将从 ptr 指向的内存位置返回数据，长度为 size。\r\n\r\n        **/\r\n        assembly {\r\n            let ptr := mload(0x40)\r\n            calldatacopy(ptr, 0, calldatasize())\r\n\r\n            let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)\r\n            let size := returndatasize()\r\n\r\n            returndatacopy(ptr, 0, size)\r\n            mstore(0x40, add(ptr, size))\r\n\r\n            switch result\r\n            case 0 { revert(ptr, size) }\r\n            default { return(ptr, size) }\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"test/可升级合约/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":61:5019  contract Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":418:491  constructor(address _logic) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":457:483  _setImplementation(_logic) */\n  tag_6\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":476:482  _logic */\n  dup2\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":457:475  _setImplementation */\n  shl(0x20, tag_7)\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":457:483  _setImplementation(_logic) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":418:491  constructor(address _logic) {... */\n  pop\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":61:5019  contract Proxy {... */\n  jump(tag_8)\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":727:956  function _setImplementation(address newImplementation) internal {... */\ntag_7:\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":920:937  newImplementation */\n  dup1\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":898:918  _IMPLEMENTATION_SLOT */\n  0x3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":891:938  sstore(_IMPLEMENTATION_SLOT, newImplementation) */\n  sstore\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":727:956  function _setImplementation(address newImplementation) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_13:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_14:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_13\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_15:\n    /* \"#utility.yul\":641:665   */\n  tag_25\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_14\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_26:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_16:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_28\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_15\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_31\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":932:1051   */\ntag_30:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_32\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_16\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":61:5019  contract Proxy {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":61:5019  contract Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1202:1214  address impl */\n      0x00\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1217:1237  _getImplementation() */\n      tag_8\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1217:1235  _getImplementation */\n      tag_9\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1217:1237  _getImplementation() */\n      jump\t// in\n    tag_8:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1202:1237  address impl = _getImplementation() */\n      swap1\n      pop\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1272:1273  0 */\n      0x00\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1256:1274  impl != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1256:1260  impl */\n      dup2\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1256:1274  impl != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1248:1301  require(impl != address(0), \"Implementation not set\") */\n      tag_10\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_11\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_10:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4619:4623  0x40 */\n      0x40\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4613:4624  mload(0x40) */\n      mload\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4659:4673  calldatasize() */\n      calldatasize\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4656:4657  0 */\n      0x00\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4651:4654  ptr */\n      dup3\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4638:4674  calldatacopy(ptr, 0, calldatasize()) */\n      calldatacopy\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4754:4755  0 */\n      0x00\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4751:4752  0 */\n      dup1\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4735:4749  calldatasize() */\n      calldatasize\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4730:4733  ptr */\n      dup4\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4724:4728  impl */\n      dup6\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4717:4722  gas() */\n      gas\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4704:4756  delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4782:4798  returndatasize() */\n      returndatasize\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4837:4841  size */\n      dup1\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4834:4835  0 */\n      0x00\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4829:4832  ptr */\n      dup5\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4814:4842  returndatacopy(ptr, 0, size) */\n      returndatacopy\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4878:4882  size */\n      dup1\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4873:4876  ptr */\n      dup4\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4869:4883  add(ptr, size) */\n      add\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4863:4867  0x40 */\n      0x40\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4856:4884  mstore(0x40, add(ptr, size)) */\n      mstore\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4907:4913  result */\n      dup2\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4932:4933  0 */\n      0x00\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4927:4955  case 0 { revert(ptr, size) } */\n      dup2\n      eq\n      tag_14\n      jumpi\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4991:4995  size */\n      dup2\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4986:4989  ptr */\n      dup5\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4979:4996  return(ptr, size) */\n      return\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4927:4955  case 0 { revert(ptr, size) } */\n    tag_14:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4948:4952  size */\n      dup2\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4943:4946  ptr */\n      dup5\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":4936:4953  revert(ptr, size) */\n      revert\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":964:1118  function upgradeTo(address newImplementation) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":499:719  function _getImplementation() internal view returns (address impl) {... */\n    tag_9:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":552:564  address impl */\n      0x00\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":680:700  _IMPLEMENTATION_SLOT */\n      0x3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":674:701  sload(_IMPLEMENTATION_SLOT) */\n      sload\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":666:701  impl := sload(_IMPLEMENTATION_SLOT) */\n      swap1\n      pop\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":499:719  function _getImplementation() internal view returns (address impl) {... */\n      swap1\n      jump\t// out\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":964:1118  function upgradeTo(address newImplementation) external {... */\n    tag_19:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1030:1067  _setImplementation(newImplementation) */\n      tag_22\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1049:1066  newImplementation */\n      dup2\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1030:1048  _setImplementation */\n      tag_23\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1030:1067  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_22:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1092:1109  newImplementation */\n      dup1\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":1083:1110  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":964:1118  function upgradeTo(address newImplementation) external {... */\n      pop\n      jump\t// out\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":727:956  function _setImplementation(address newImplementation) internal {... */\n    tag_23:\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":920:937  newImplementation */\n      dup1\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":898:918  _IMPLEMENTATION_SLOT */\n      0x3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":891:938  sstore(_IMPLEMENTATION_SLOT, newImplementation) */\n      sstore\n        /* \"test/\\xe5\\x8f\\xaf\\xe5\\x8d\\x87\\xe7\\xba\\xa7\\xe5\\x90\\x88\\xe7\\xba\\xa6/Proxy.sol\":727:956  function _setImplementation(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_25:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:354   */\n    tag_26:\n        /* \"#utility.yul\":322:346   */\n      0x496d706c656d656e746174696f6e206e6f742073657400000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:347   */\n      mstore\n        /* \"#utility.yul\":182:354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":360:726   */\n    tag_27:\n        /* \"#utility.yul\":502:505   */\n      0x00\n        /* \"#utility.yul\":523:590   */\n      tag_39\n        /* \"#utility.yul\":587:589   */\n      0x16\n        /* \"#utility.yul\":582:585   */\n      dup4\n        /* \"#utility.yul\":523:590   */\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":516:590   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:692   */\n      tag_40\n        /* \"#utility.yul\":688:691   */\n      dup3\n        /* \"#utility.yul\":599:692   */\n      tag_26\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":717:719   */\n      0x20\n        /* \"#utility.yul\":712:715   */\n      dup3\n        /* \"#utility.yul\":708:720   */\n      add\n        /* \"#utility.yul\":701:720   */\n      swap1\n      pop\n        /* \"#utility.yul\":360:726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":732:1151   */\n    tag_12:\n        /* \"#utility.yul\":898:902   */\n      0x00\n        /* \"#utility.yul\":936:938   */\n      0x20\n        /* \"#utility.yul\":925:934   */\n      dup3\n        /* \"#utility.yul\":921:939   */\n      add\n        /* \"#utility.yul\":913:939   */\n      swap1\n      pop\n        /* \"#utility.yul\":985:994   */\n      dup2\n        /* \"#utility.yul\":979:983   */\n      dup2\n        /* \"#utility.yul\":975:995   */\n      sub\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":960:969   */\n      dup4\n        /* \"#utility.yul\":956:973   */\n      add\n        /* \"#utility.yul\":949:996   */\n      mstore\n        /* \"#utility.yul\":1013:1144   */\n      tag_42\n        /* \"#utility.yul\":1139:1143   */\n      dup2\n        /* \"#utility.yul\":1013:1144   */\n      tag_27\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1005:1144   */\n      swap1\n      pop\n        /* \"#utility.yul\":732:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1238:1355   */\n    tag_29:\n        /* \"#utility.yul\":1347:1348   */\n      0x00\n        /* \"#utility.yul\":1344:1345   */\n      dup1\n        /* \"#utility.yul\":1337:1349   */\n      revert\n        /* \"#utility.yul\":1484:1610   */\n    tag_31:\n        /* \"#utility.yul\":1521:1528   */\n      0x00\n        /* \"#utility.yul\":1561:1603   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1554:1559   */\n      dup3\n        /* \"#utility.yul\":1550:1604   */\n      and\n        /* \"#utility.yul\":1539:1604   */\n      swap1\n      pop\n        /* \"#utility.yul\":1484:1610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1616:1712   */\n    tag_32:\n        /* \"#utility.yul\":1653:1660   */\n      0x00\n        /* \"#utility.yul\":1682:1706   */\n      tag_48\n        /* \"#utility.yul\":1700:1705   */\n      dup3\n        /* \"#utility.yul\":1682:1706   */\n      tag_31\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1671:1706   */\n      swap1\n      pop\n        /* \"#utility.yul\":1616:1712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1718:1840   */\n    tag_33:\n        /* \"#utility.yul\":1791:1815   */\n      tag_50\n        /* \"#utility.yul\":1809:1814   */\n      dup2\n        /* \"#utility.yul\":1791:1815   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1784:1789   */\n      dup2\n        /* \"#utility.yul\":1781:1816   */\n      eq\n        /* \"#utility.yul\":1771:1834   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1830:1831   */\n      0x00\n        /* \"#utility.yul\":1827:1828   */\n      dup1\n        /* \"#utility.yul\":1820:1832   */\n      revert\n        /* \"#utility.yul\":1771:1834   */\n    tag_51:\n        /* \"#utility.yul\":1718:1840   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1846:1985   */\n    tag_34:\n        /* \"#utility.yul\":1892:1897   */\n      0x00\n        /* \"#utility.yul\":1930:1936   */\n      dup2\n        /* \"#utility.yul\":1917:1937   */\n      calldataload\n        /* \"#utility.yul\":1908:1937   */\n      swap1\n      pop\n        /* \"#utility.yul\":1946:1979   */\n      tag_53\n        /* \"#utility.yul\":1973:1978   */\n      dup2\n        /* \"#utility.yul\":1946:1979   */\n      tag_33\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1846:1985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1991:2320   */\n    tag_18:\n        /* \"#utility.yul\":2050:2056   */\n      0x00\n        /* \"#utility.yul\":2099:2101   */\n      0x20\n        /* \"#utility.yul\":2087:2096   */\n      dup3\n        /* \"#utility.yul\":2078:2085   */\n      dup5\n        /* \"#utility.yul\":2074:2097   */\n      sub\n        /* \"#utility.yul\":2070:2102   */\n      slt\n        /* \"#utility.yul\":2067:2186   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":2105:2184   */\n      tag_56\n      tag_29\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2067:2186   */\n    tag_55:\n        /* \"#utility.yul\":2225:2226   */\n      0x00\n        /* \"#utility.yul\":2250:2303   */\n      tag_57\n        /* \"#utility.yul\":2295:2302   */\n      dup5\n        /* \"#utility.yul\":2286:2292   */\n      dup3\n        /* \"#utility.yul\":2275:2284   */\n      dup6\n        /* \"#utility.yul\":2271:2293   */\n      add\n        /* \"#utility.yul\":2250:2303   */\n      tag_34\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2240:2303   */\n      swap2\n      pop\n        /* \"#utility.yul\":2196:2313   */\n      pop\n        /* \"#utility.yul\":1991:2320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f7b1486da7a3a7d2837c10a9d18e1174c13099696aa51896e6760d6bb3a7d0264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_32": {
									"entryPoint": 70,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:1",
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516103c83803806103c8833981810160405281019061003191906100ca565b6100408161004660201b60201c565b506100f5565b807f3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe5550565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61009982610070565b9050919050565b6100a98161008f565b81146100b3575f80fd5b50565b5f815190506100c4816100a0565b92915050565b5f602082840312156100df576100de61006c565b5b5f6100ec848285016100b6565b91505092915050565b6102c6806101025f395ff3fe608060405260043610610021575f3560e01c80633659cfe6146100ca57610028565b3661002857005b5f6100316100f2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610098906101e9565b60405180910390fd5b604051365f82375f803683855af43d805f843e808301604052815f81146100c6578184f35b8184fd5b3480156100d5575f80fd5b506100f060048036038101906100eb9190610265565b61011a565b005b5f7f3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe54905090565b61012381610169565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b807f3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe5550565b5f82825260208201905092915050565b7f496d706c656d656e746174696f6e206e6f7420736574000000000000000000005f82015250565b5f6101d360168361018f565b91506101de8261019f565b602082019050919050565b5f6020820190508181035f830152610200816101c7565b9050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102348261020b565b9050919050565b6102448161022a565b811461024e575f80fd5b50565b5f8135905061025f8161023b565b92915050565b5f6020828403121561027a57610279610207565b5b5f61028784828501610251565b9150509291505056fea26469706673582212202f7b1486da7a3a7d2837c10a9d18e1174c13099696aa51896e6760d6bb3a7d0264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3C8 CODESIZE SUB DUP1 PUSH2 0x3C8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xCA JUMP JUMPDEST PUSH2 0x40 DUP2 PUSH2 0x46 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH32 0x3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE SSTORE POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x99 DUP3 PUSH2 0x70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9 DUP2 PUSH2 0x8F JUMP JUMPDEST DUP2 EQ PUSH2 0xB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC4 DUP2 PUSH2 0xA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF JUMPI PUSH2 0xDE PUSH2 0x6C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEC DUP5 DUP3 DUP6 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C6 DUP1 PUSH2 0x102 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xCA JUMPI PUSH2 0x28 JUMP JUMPDEST CALLDATASIZE PUSH2 0x28 JUMPI STOP JUMPDEST PUSH0 PUSH2 0x31 PUSH2 0xF2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH0 DUP3 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH0 DUP5 RETURNDATACOPY DUP1 DUP4 ADD PUSH1 0x40 MSTORE DUP2 PUSH0 DUP2 EQ PUSH2 0xC6 JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x123 DUP2 PUSH2 0x169 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST DUP1 PUSH32 0x3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE SSTORE POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496D706C656D656E746174696F6E206E6F742073657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3 PUSH1 0x16 DUP4 PUSH2 0x18F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE DUP3 PUSH2 0x19F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x200 DUP2 PUSH2 0x1C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x234 DUP3 PUSH2 0x20B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25F DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A JUMPI PUSH2 0x279 PUSH2 0x207 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287 DUP5 DUP3 DUP6 ADD PUSH2 0x251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH28 0x1486DA7A3A7D2837C10A9D18E1174C13099696AA51896E6760D6BB3A PUSH30 0x264736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "61:4958:0:-:0;;;418:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;457:26;476:6;457:18;;;:26;;:::i;:::-;418:73;61:4958;;727:229;920:17;898:20;891:47;727:229;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;61:4958:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_25": {
									"entryPoint": 242,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setImplementation_32": {
									"entryPoint": 361,
									"id": 32,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeTo_46": {
									"entryPoint": 282,
									"id": 46,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2323:1",
										"nodeType": "YulBlock",
										"src": "0:2323:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:1",
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nativeSrc": "113:19:1",
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nativeSrc": "113:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nativeSrc": "141:29:1",
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:1",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nativeSrc": "156:14:1",
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:1",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:1",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:1",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nativeSrc": "288:66:1",
													"nodeType": "YulBlock",
													"src": "288:66:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:1",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nativeSrc": "306:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "496d706c656d656e746174696f6e206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "322:24:1",
																		"nodeType": "YulLiteral",
																		"src": "322:24:1",
																		"type": "",
																		"value": "Implementation not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nativeSrc": "299:48:1",
																"nodeType": "YulFunctionCall",
																"src": "299:48:1"
															},
															"nativeSrc": "299:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "299:48:1"
														}
													]
												},
												"name": "store_literal_in_memory_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746",
												"nativeSrc": "182:172:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:172:1"
											},
											{
												"body": {
													"nativeSrc": "506:220:1",
													"nodeType": "YulBlock",
													"src": "506:220:1",
													"statements": [
														{
															"nativeSrc": "516:74:1",
															"nodeType": "YulAssignment",
															"src": "516:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "582:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "582:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:2:1",
																		"nodeType": "YulLiteral",
																		"src": "587:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "523:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "523:58:1"
																},
																"nativeSrc": "523:67:1",
																"nodeType": "YulFunctionCall",
																"src": "523:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "516:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "688:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "688:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746",
																	"nativeSrc": "599:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "599:88:1"
																},
																"nativeSrc": "599:93:1",
																"nodeType": "YulFunctionCall",
																"src": "599:93:1"
															},
															"nativeSrc": "599:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "599:93:1"
														},
														{
															"nativeSrc": "701:19:1",
															"nodeType": "YulAssignment",
															"src": "701:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "712:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "712:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "717:2:1",
																		"nodeType": "YulLiteral",
																		"src": "717:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "708:3:1"
																},
																"nativeSrc": "708:12:1",
																"nodeType": "YulFunctionCall",
																"src": "708:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "701:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "360:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "494:3:1",
														"nodeType": "YulTypedName",
														"src": "494:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "502:3:1",
														"nodeType": "YulTypedName",
														"src": "502:3:1",
														"type": ""
													}
												],
												"src": "360:366:1"
											},
											{
												"body": {
													"nativeSrc": "903:248:1",
													"nodeType": "YulBlock",
													"src": "903:248:1",
													"statements": [
														{
															"nativeSrc": "913:26:1",
															"nodeType": "YulAssignment",
															"src": "913:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "925:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "925:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:2:1",
																		"nodeType": "YulLiteral",
																		"src": "936:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "921:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "921:3:1"
																},
																"nativeSrc": "921:18:1",
																"nodeType": "YulFunctionCall",
																"src": "921:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "913:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "913:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "960:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "960:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "971:1:1",
																				"nodeType": "YulLiteral",
																				"src": "971:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "956:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:1"
																		},
																		"nativeSrc": "956:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "956:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "979:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "985:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "985:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "975:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:1"
																		},
																		"nativeSrc": "975:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "975:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "949:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "949:6:1"
																},
																"nativeSrc": "949:47:1",
																"nodeType": "YulFunctionCall",
																"src": "949:47:1"
															},
															"nativeSrc": "949:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "949:47:1"
														},
														{
															"nativeSrc": "1005:139:1",
															"nodeType": "YulAssignment",
															"src": "1005:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1139:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1139:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1013:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1013:124:1"
																},
																"nativeSrc": "1013:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1013:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1005:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1005:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "732:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "883:9:1",
														"nodeType": "YulTypedName",
														"src": "883:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "898:4:1",
														"nodeType": "YulTypedName",
														"src": "898:4:1",
														"type": ""
													}
												],
												"src": "732:419:1"
											},
											{
												"body": {
													"nativeSrc": "1197:35:1",
													"nodeType": "YulBlock",
													"src": "1197:35:1",
													"statements": [
														{
															"nativeSrc": "1207:19:1",
															"nodeType": "YulAssignment",
															"src": "1207:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1223:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1223:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1217:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1217:5:1"
																},
																"nativeSrc": "1217:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1217:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1207:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1157:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1190:6:1",
														"nodeType": "YulTypedName",
														"src": "1190:6:1",
														"type": ""
													}
												],
												"src": "1157:75:1"
											},
											{
												"body": {
													"nativeSrc": "1327:28:1",
													"nodeType": "YulBlock",
													"src": "1327:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1344:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1344:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1347:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1347:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1337:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:1"
																},
																"nativeSrc": "1337:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1337:12:1"
															},
															"nativeSrc": "1337:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1337:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1238:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1238:117:1"
											},
											{
												"body": {
													"nativeSrc": "1450:28:1",
													"nodeType": "YulBlock",
													"src": "1450:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1467:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1470:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1470:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1460:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:1"
																},
																"nativeSrc": "1460:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1460:12:1"
															},
															"nativeSrc": "1460:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1460:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1361:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1361:117:1"
											},
											{
												"body": {
													"nativeSrc": "1529:81:1",
													"nodeType": "YulBlock",
													"src": "1529:81:1",
													"statements": [
														{
															"nativeSrc": "1539:65:1",
															"nodeType": "YulAssignment",
															"src": "1539:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1554:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1554:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1561:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1561:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1550:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1550:3:1"
																},
																"nativeSrc": "1550:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1550:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1539:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1539:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1484:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1511:5:1",
														"nodeType": "YulTypedName",
														"src": "1511:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1521:7:1",
														"nodeType": "YulTypedName",
														"src": "1521:7:1",
														"type": ""
													}
												],
												"src": "1484:126:1"
											},
											{
												"body": {
													"nativeSrc": "1661:51:1",
													"nodeType": "YulBlock",
													"src": "1661:51:1",
													"statements": [
														{
															"nativeSrc": "1671:35:1",
															"nodeType": "YulAssignment",
															"src": "1671:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1700:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1700:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1682:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1682:17:1"
																},
																"nativeSrc": "1682:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1682:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1671:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1671:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1616:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1643:5:1",
														"nodeType": "YulTypedName",
														"src": "1643:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1653:7:1",
														"nodeType": "YulTypedName",
														"src": "1653:7:1",
														"type": ""
													}
												],
												"src": "1616:96:1"
											},
											{
												"body": {
													"nativeSrc": "1761:79:1",
													"nodeType": "YulBlock",
													"src": "1761:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1818:16:1",
																"nodeType": "YulBlock",
																"src": "1818:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1827:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1830:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1830:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1820:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nativeSrc": "1820:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1820:12:1"
																		},
																		"nativeSrc": "1820:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1784:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1784:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1809:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1809:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1791:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1791:17:1"
																				},
																				"nativeSrc": "1791:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1791:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1781:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1781:2:1"
																		},
																		"nativeSrc": "1781:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1781:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1774:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:1"
																},
																"nativeSrc": "1774:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1774:43:1"
															},
															"nativeSrc": "1771:63:1",
															"nodeType": "YulIf",
															"src": "1771:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1718:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1754:5:1",
														"nodeType": "YulTypedName",
														"src": "1754:5:1",
														"type": ""
													}
												],
												"src": "1718:122:1"
											},
											{
												"body": {
													"nativeSrc": "1898:87:1",
													"nodeType": "YulBlock",
													"src": "1898:87:1",
													"statements": [
														{
															"nativeSrc": "1908:29:1",
															"nodeType": "YulAssignment",
															"src": "1908:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1930:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1930:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1917:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1917:12:1"
																},
																"nativeSrc": "1917:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1917:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1908:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1908:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1973:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1973:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1946:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1946:26:1"
																},
																"nativeSrc": "1946:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1946:33:1"
															},
															"nativeSrc": "1946:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1946:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1846:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1876:6:1",
														"nodeType": "YulTypedName",
														"src": "1876:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1884:3:1",
														"nodeType": "YulTypedName",
														"src": "1884:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1892:5:1",
														"nodeType": "YulTypedName",
														"src": "1892:5:1",
														"type": ""
													}
												],
												"src": "1846:139:1"
											},
											{
												"body": {
													"nativeSrc": "2057:263:1",
													"nodeType": "YulBlock",
													"src": "2057:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2103:83:1",
																"nodeType": "YulBlock",
																"src": "2103:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2105:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2105:77:1"
																			},
																			"nativeSrc": "2105:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2105:79:1"
																		},
																		"nativeSrc": "2105:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2105:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2078:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2078:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2087:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2087:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2074:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2074:3:1"
																		},
																		"nativeSrc": "2074:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2074:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2099:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2099:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2070:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:1"
																},
																"nativeSrc": "2070:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2070:32:1"
															},
															"nativeSrc": "2067:119:1",
															"nodeType": "YulIf",
															"src": "2067:119:1"
														},
														{
															"nativeSrc": "2196:117:1",
															"nodeType": "YulBlock",
															"src": "2196:117:1",
															"statements": [
																{
																	"nativeSrc": "2211:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2211:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2225:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2225:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2215:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2215:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2240:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2240:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2275:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2275:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2286:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2286:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2271:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2271:3:1"
																				},
																				"nativeSrc": "2271:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2271:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2295:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2295:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2250:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2250:20:1"
																		},
																		"nativeSrc": "2250:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2240:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2240:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1991:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2027:9:1",
														"nodeType": "YulTypedName",
														"src": "2027:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2038:7:1",
														"nodeType": "YulTypedName",
														"src": "2038:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2050:6:1",
														"nodeType": "YulTypedName",
														"src": "2050:6:1",
														"type": ""
													}
												],
												"src": "1991:329:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746(memPtr) {\n\n        mstore(add(memPtr, 0), \"Implementation not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610021575f3560e01c80633659cfe6146100ca57610028565b3661002857005b5f6100316100f2565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610098906101e9565b60405180910390fd5b604051365f82375f803683855af43d805f843e808301604052815f81146100c6578184f35b8184fd5b3480156100d5575f80fd5b506100f060048036038101906100eb9190610265565b61011a565b005b5f7f3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe54905090565b61012381610169565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b807f3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe5550565b5f82825260208201905092915050565b7f496d706c656d656e746174696f6e206e6f7420736574000000000000000000005f82015250565b5f6101d360168361018f565b91506101de8261019f565b602082019050919050565b5f6020820190508181035f830152610200816101c7565b9050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102348261020b565b9050919050565b6102448161022a565b811461024e575f80fd5b50565b5f8135905061025f8161023b565b92915050565b5f6020828403121561027a57610279610207565b5b5f61028784828501610251565b9150509291505056fea26469706673582212202f7b1486da7a3a7d2837c10a9d18e1174c13099696aa51896e6760d6bb3a7d0264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0xCA JUMPI PUSH2 0x28 JUMP JUMPDEST CALLDATASIZE PUSH2 0x28 JUMPI STOP JUMPDEST PUSH0 PUSH2 0x31 PUSH2 0xF2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x1E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH0 DUP3 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH0 DUP5 RETURNDATACOPY DUP1 DUP4 ADD PUSH1 0x40 MSTORE DUP2 PUSH0 DUP2 EQ PUSH2 0xC6 JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH2 0x11A JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x123 DUP2 PUSH2 0x169 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST DUP1 PUSH32 0x3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE SSTORE POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496D706C656D656E746174696F6E206E6F742073657400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3 PUSH1 0x16 DUP4 PUSH2 0x18F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE DUP3 PUSH2 0x19F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x200 DUP2 PUSH2 0x1C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x234 DUP3 PUSH2 0x20B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x22A JUMP JUMPDEST DUP2 EQ PUSH2 0x24E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25F DUP2 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A JUMPI PUSH2 0x279 PUSH2 0x207 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287 DUP5 DUP3 DUP6 ADD PUSH2 0x251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH28 0x1486DA7A3A7D2837C10A9D18E1174C13099696AA51896E6760D6BB3A PUSH30 0x264736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "61:4958:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;1202:12;1217:20;:18;:20::i;:::-;1202:35;;1272:1;1256:18;;:4;:18;;;1248:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4619:4;4613:11;4659:14;4656:1;4651:3;4638:36;4754:1;4751;4735:14;4730:3;4724:4;4717:5;4704:52;4782:16;4837:4;4834:1;4829:3;4814:28;4878:4;4873:3;4869:14;4863:4;4856:28;4907:6;4932:1;4927:28;;;;4991:4;4986:3;4979:17;4927:28;4948:4;4943:3;4936:17;964:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;499:220;552:12;680:20;674:27;666:35;;499:220;:::o;964:154::-;1030:37;1049:17;1030:18;:37::i;:::-;1092:17;1083:27;;;;;;;;;;;;964:154;:::o;727:229::-;920:17;898:20;891:47;727:229;:::o;7:169:1:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:172::-;322:24;318:1;310:6;306:14;299:48;182:172;:::o;360:366::-;502:3;523:67;587:2;582:3;523:67;:::i;:::-;516:74;;599:93;688:3;599:93;:::i;:::-;717:2;712:3;708:12;701:19;;360:366;;;:::o;732:419::-;898:4;936:2;925:9;921:18;913:26;;985:9;979:4;975:20;971:1;960:9;956:17;949:47;1013:131;1139:4;1013:131;:::i;:::-;1005:139;;732:419;;;:::o;1238:117::-;1347:1;1344;1337:12;1484:126;1521:7;1561:42;1554:5;1550:54;1539:65;;1484:126;;;:::o;1616:96::-;1653:7;1682:24;1700:5;1682:24;:::i;:::-;1671:35;;1616:96;;;:::o;1718:122::-;1791:24;1809:5;1791:24;:::i;:::-;1784:5;1781:35;1771:63;;1830:1;1827;1820:12;1771:63;1718:122;:::o;1846:139::-;1892:5;1930:6;1917:20;1908:29;;1946:33;1973:5;1946:33;:::i;:::-;1846:139;;;;:::o;1991:329::-;2050:6;2099:2;2087:9;2078:7;2074:23;2070:32;2067:119;;;2105:79;;:::i;:::-;2067:119;2225:1;2250:53;2295:7;2286:6;2275:9;2271:22;2250:53;:::i;:::-;2240:63;;2196:117;1991:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "142000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"upgradeTo(address)": "23723"
							},
							"internal": {
								"_getImplementation()": "2122",
								"_setImplementation(address)": "22117"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 5019,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 491,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 491,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 491,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 491,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 418,
									"end": 491,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 418,
									"end": 491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 418,
									"end": 491,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 457,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 476,
									"end": 482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 457,
									"end": 475,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 457,
									"end": 475,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 475,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 457,
									"end": 483,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 483,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 457,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 457,
									"end": 483,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 457,
									"end": 483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 418,
									"end": 491,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 727,
									"end": 956,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 727,
									"end": 956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 920,
									"end": 937,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 898,
									"end": 918,
									"name": "PUSH",
									"source": 0,
									"value": "3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE"
								},
								{
									"begin": 891,
									"end": 938,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 727,
									"end": 956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 727,
									"end": 956,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 5019,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f7b1486da7a3a7d2837c10a9d18e1174c13099696aa51896e6760d6bb3a7d0264736f6c634300081a0033",
									".code": [
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 61,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1217,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1248,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1248,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4613,
											"end": 4624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4659,
											"end": 4673,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4656,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4651,
											"end": 4654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4638,
											"end": 4674,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4735,
											"end": 4749,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4722,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4756,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4798,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4837,
											"end": 4841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4829,
											"end": 4832,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4814,
											"end": 4842,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4878,
											"end": 4882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4873,
											"end": 4876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4869,
											"end": 4883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4856,
											"end": 4884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4907,
											"end": 4913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4955,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4927,
											"end": 4955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4991,
											"end": 4995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 4989,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4979,
											"end": 4996,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4927,
											"end": 4955,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4927,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 964,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 964,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 719,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 499,
											"end": 719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE"
										},
										{
											"begin": 674,
											"end": 701,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 666,
											"end": 701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 499,
											"end": 719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1049,
											"end": 1066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1030,
											"end": 1067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1030,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "PUSH",
											"source": 0,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1083,
											"end": 1110,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 727,
											"end": 956,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 727,
											"end": 956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 920,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 918,
											"name": "PUSH",
											"source": 0,
											"value": "3F0B3FBBCE1E4C5F7C91D1B1A4C871BFA7A43FBD13ABBBB1744B59F235B7FABE"
										},
										{
											"begin": 891,
											"end": 938,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 727,
											"end": 956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 727,
											"end": 956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 354,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 182,
											"end": 354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "496D706C656D656E746174696F6E206E6F742073657400000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 726,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 360,
											"end": 726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 587,
											"end": 589,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 582,
											"end": 585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 523,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 590,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 523,
											"end": 590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 516,
											"end": 590,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 688,
											"end": 691,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 599,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 599,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 692,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 708,
											"end": 720,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 701,
											"end": 720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 360,
											"end": 726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 898,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 921,
											"end": 939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 913,
											"end": 939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 913,
											"end": 939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 985,
											"end": 994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 995,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 956,
											"end": 973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1139,
											"end": 1143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1013,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1013,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 732,
											"end": 1151,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 732,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1355,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1238,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1610,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1484,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1603,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1554,
											"end": 1559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1712,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1616,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1700,
											"end": 1705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1682,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1682,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1712,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1616,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1840,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1718,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1809,
											"end": 1814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1791,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1791,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1816,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1832,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1771,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1985,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1846,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1937,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1973,
											"end": 1978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1946,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1946,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1991,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2101,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2085,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2102,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2186,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2067,
											"end": 2186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2105,
											"end": 2184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2105,
											"end": 2184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2184,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2105,
											"end": 2184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2067,
											"end": 2186,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2067,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2295,
											"end": 2302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2250,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2250,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"test/可升级合约/Proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"upgradeTo(address)": "3659cfe6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/\\u53ef\\u5347\\u7ea7\\u5408\\u7ea6/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/\\u53ef\\u5347\\u7ea7\\u5408\\u7ea6/Proxy.sol\":{\"keccak256\":\"0x2a72105e5983642579844e62850ab0d463648a1801fb9dc0a673dca2bc6304cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a29457ef208397605f4899666c02d369424c855948a4d8933f3435715fa6071\",\"dweb:/ipfs/QmYtG4bRZv2jFaK68FJNwZjvu8JsMNWyNB1FT3v9SHSscz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6269",
				"formattedMessage": "Warning: Unexpected NatSpec tag \"notice\" with value \"let ptr := mload(0x40) 作用：这行代码将 0x40 位置的数据加载到 ptr 变量中。 mload(0x40) 获取的是 \"free memory pointer\"，即指向 Solidity 存储中下一个空闲内存位置的指针。Solidity 使用 0x40 作为其内存管理的特殊位置。 通过该指针，可以动态地管理内存，避免固定内存位置的冲突。 2. calldatacopy(ptr, 0, calldatasize()) 作用：这行代码将调用数据（calldata）复制到内存中的 ptr 所指向的位置。 calldatacopy 是一个内联汇编函数，它将从 calldata 中复制数据到内存中。 ptr 是目标内存位置（前面我们加载了“free memory pointer”）。 0 是 calldata 的偏移量（从 calldata 的开始处开始复制）。 calldatasize() 返回调用数据的大小，也就是我们要复制的数据长度。 3. let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) 作用：使用 delegatecall 执行目标合约的代码，并传递调用数据。 delegatecall 是一个特殊的操作，它将合约的代码执行委托给另一个合约，并且调用者的 storage 和 msg.sender 等信息不会变化，只会执行目标合约的代码。 gas()：将剩余的 gas 传递给目标合约。 impl：目标合约的地址（通常是存储在代理合约中的实现合约地址）。 ptr：复制的调用数据的内存位置。 calldatasize()：调用数据的大小，即从调用中传递的参数的长度。 0, 0：这两个参数表示返回数据的内存位置（返回数据会存储在 0 位置，但这里我们暂时不关心具体位置）。 delegatecall 会返回一个布尔值 result，如果执行成功，则 result 为 1，否则为 0。 4. let size := returndatasize() 作用：获取返回数据的大小。 returndatasize() 返回由目标合约执行后返回的数据的大小。 5. returndatacopy(ptr, 0, size) 作用：将目标合约返回的数据复制到内存中的 ptr 指向的地址。 returndatacopy 是一个内联汇编函数，它将返回数据从 0 位置复制到 ptr 所指向的位置，复制的长度为 size。 6. mstore(0x40, add(ptr, size)) 作用：更新 \"free memory pointer\"。 mstore(0x40, add(ptr, size)) 这行代码更新了 0x40 的指针，将其移动到新的空闲内存位置。具体来说，它将指针移动到 ptr + size，即返回数据后面的空闲内存区域。 7. switch result 作用：根据 delegatecall 的执行结果，判断是返回数据还是发生错误。 switch result 是根据 result 的值（它是 delegatecall 的返回值）来判断是否成功执行。 8. case 0 { revert(ptr, size) } 作用：如果 result 为 0，说明 delegatecall 执行失败，合约会调用 revert。 revert(ptr, size) 将复制返回数据并回滚交易，这样外部调用者会收到错误信息。 9. default { return(ptr, size) } 作用：如果 result 为非 0（即执行成功），则会将目标合约的返回数据返回给调用者。 return(ptr, size) 将从 ptr 指向的内存位置返回数据，长度为 size。*\" in inline assembly.\n   --> test/可升级合约/Proxy.sol:109:9:\n    |\n109 |         assembly {\n    |         ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Unexpected NatSpec tag \"notice\" with value \"let ptr := mload(0x40) 作用：这行代码将 0x40 位置的数据加载到 ptr 变量中。 mload(0x40) 获取的是 \"free memory pointer\"，即指向 Solidity 存储中下一个空闲内存位置的指针。Solidity 使用 0x40 作为其内存管理的特殊位置。 通过该指针，可以动态地管理内存，避免固定内存位置的冲突。 2. calldatacopy(ptr, 0, calldatasize()) 作用：这行代码将调用数据（calldata）复制到内存中的 ptr 所指向的位置。 calldatacopy 是一个内联汇编函数，它将从 calldata 中复制数据到内存中。 ptr 是目标内存位置（前面我们加载了“free memory pointer”）。 0 是 calldata 的偏移量（从 calldata 的开始处开始复制）。 calldatasize() 返回调用数据的大小，也就是我们要复制的数据长度。 3. let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0) 作用：使用 delegatecall 执行目标合约的代码，并传递调用数据。 delegatecall 是一个特殊的操作，它将合约的代码执行委托给另一个合约，并且调用者的 storage 和 msg.sender 等信息不会变化，只会执行目标合约的代码。 gas()：将剩余的 gas 传递给目标合约。 impl：目标合约的地址（通常是存储在代理合约中的实现合约地址）。 ptr：复制的调用数据的内存位置。 calldatasize()：调用数据的大小，即从调用中传递的参数的长度。 0, 0：这两个参数表示返回数据的内存位置（返回数据会存储在 0 位置，但这里我们暂时不关心具体位置）。 delegatecall 会返回一个布尔值 result，如果执行成功，则 result 为 1，否则为 0。 4. let size := returndatasize() 作用：获取返回数据的大小。 returndatasize() 返回由目标合约执行后返回的数据的大小。 5. returndatacopy(ptr, 0, size) 作用：将目标合约返回的数据复制到内存中的 ptr 指向的地址。 returndatacopy 是一个内联汇编函数，它将返回数据从 0 位置复制到 ptr 所指向的位置，复制的长度为 size。 6. mstore(0x40, add(ptr, size)) 作用：更新 \"free memory pointer\"。 mstore(0x40, add(ptr, size)) 这行代码更新了 0x40 的指针，将其移动到新的空闲内存位置。具体来说，它将指针移动到 ptr + size，即返回数据后面的空闲内存区域。 7. switch result 作用：根据 delegatecall 的执行结果，判断是返回数据还是发生错误。 switch result 是根据 result 的值（它是 delegatecall 的返回值）来判断是否成功执行。 8. case 0 { revert(ptr, size) } 作用：如果 result 为 0，说明 delegatecall 执行失败，合约会调用 revert。 revert(ptr, size) 将复制返回数据并回滚交易，这样外部调用者会收到错误信息。 9. default { return(ptr, size) } 作用：如果 result 为非 0（即执行成功），则会将目标合约的返回数据返回给调用者。 return(ptr, size) 将从 ptr 指向的内存位置返回数据，长度为 size。*\" in inline assembly.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5009,
					"file": "test/可升级合约/Proxy.sol",
					"start": 4578
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test/可升级合约/Proxy.sol": {
				"ast": {
					"absolutePath": "test/可升级合约/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							71
						]
					},
					"id": 72,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "Proxy",
							"nameLocation": "70:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 4,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "192:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 71,
									"src": "166:125:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "166:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833663062336662626365316534633566376339316431623161346338373162666137613433666264313361626262623137343462353966323335623766616265",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "225:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_28515584651695015352406244256651155094759782517220554208519745691328276069054_by_1",
											"typeString": "int_const 2851...(69 digits omitted)...9054"
										},
										"value": "0x3f0b3fbbce1e4c5f7c91d1b1a4c871bfa7a43fbd13abbbb1744b59f235b7fabe"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 8,
									"name": "Upgraded",
									"nameLocation": "366:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"indexed": true,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "391:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "375:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:35:0"
									},
									"src": "360:50:0"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "446:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 14,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "476:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 13,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "457:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "457:26:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:16:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:0:0"
									},
									"scope": 71,
									"src": "418:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "566:153:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "586:126:0",
													"nodeType": "YulBlock",
													"src": "586:126:0",
													"statements": [
														{
															"nativeSrc": "666:35:0",
															"nodeType": "YulAssignment",
															"src": "666:35:0",
															"value": {
																"arguments": [
																	{
																		"name": "_IMPLEMENTATION_SLOT",
																		"nativeSrc": "680:20:0",
																		"nodeType": "YulIdentifier",
																		"src": "680:20:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "674:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "674:5:0"
																},
																"nativeSrc": "674:27:0",
																"nodeType": "YulFunctionCall",
																"src": "674:27:0"
															},
															"variableNames": [
																{
																	"name": "impl",
																	"nativeSrc": "666:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "666:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "680:20:0",
														"valueSize": 1
													},
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": false,
														"src": "666:4:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "577:135:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "508:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "552:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:14:0"
									},
									"scope": 71,
									"src": "499:220:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "791:165:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "811:138:0",
													"nodeType": "YulBlock",
													"src": "811:138:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_IMPLEMENTATION_SLOT",
																		"nativeSrc": "898:20:0",
																		"nodeType": "YulIdentifier",
																		"src": "898:20:0"
																	},
																	{
																		"name": "newImplementation",
																		"nativeSrc": "920:17:0",
																		"nodeType": "YulIdentifier",
																		"src": "920:17:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "891:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:0"
																},
																"nativeSrc": "891:47:0",
																"nodeType": "YulFunctionCall",
																"src": "891:47:0"
															},
															"nativeSrc": "891:47:0",
															"nodeType": "YulExpressionStatement",
															"src": "891:47:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "898:20:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "920:17:0",
														"valueSize": 1
													}
												],
												"id": 30,
												"nodeType": "InlineAssembly",
												"src": "802:147:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "736:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "763:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "755:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:27:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:0"
									},
									"scope": 71,
									"src": "727:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1019:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1049:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "1030:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1030:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 42,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "1092:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 41,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "1083:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "EmitStatement",
												"src": "1078:32:0"
											}
										]
									},
									"functionSelector": "3659cfe6",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "973:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "991:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "983:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:27:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1019:0:0"
									},
									"scope": 71,
									"src": "964:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1153:2:0",
										"statements": []
									},
									"id": 50,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:0:0"
									},
									"scope": 71,
									"src": "1126:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1191:3825:0",
										"statements": [
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "impl",
														"nameLocation": "1210:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "1202:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 53,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1202:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 57,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 55,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1217:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1217:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1202:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 59,
																"name": "impl",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "1256:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 62,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1272:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1264:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 60,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1264:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1264:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1256:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496d706c656d656e746174696f6e206e6f7420736574",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1276:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746",
																"typeString": "literal_string \"Implementation not set\""
															},
															"value": "Implementation not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_311e1401b7ae9a943023931a26a30c4325a8cfde9d9981865dc6939bb25f8746",
																"typeString": "literal_string \"Implementation not set\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1248:53:0"
											},
											{
												"AST": {
													"nativeSrc": "4587:422:0",
													"nodeType": "YulBlock",
													"src": "4587:422:0",
													"statements": [
														{
															"nativeSrc": "4602:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4602:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4619:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4619:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4613:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "4613:5:0"
																},
																"nativeSrc": "4613:11:0",
																"nodeType": "YulFunctionCall",
																"src": "4613:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "4606:3:0",
																	"nodeType": "YulTypedName",
																	"src": "4606:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4651:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4651:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4656:1:0",
																		"nodeType": "YulLiteral",
																		"src": "4656:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "4659:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "4659:12:0"
																		},
																		"nativeSrc": "4659:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4659:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4638:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "4638:12:0"
																},
																"nativeSrc": "4638:36:0",
																"nodeType": "YulFunctionCall",
																"src": "4638:36:0"
															},
															"nativeSrc": "4638:36:0",
															"nodeType": "YulExpressionStatement",
															"src": "4638:36:0"
														},
														{
															"nativeSrc": "4690:66:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4690:66:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "4717:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4717:3:0"
																		},
																		"nativeSrc": "4717:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4717:5:0"
																	},
																	{
																		"name": "impl",
																		"nativeSrc": "4724:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4724:4:0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4730:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4730:3:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "4735:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "4735:12:0"
																		},
																		"nativeSrc": "4735:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4735:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4751:1:0",
																		"nodeType": "YulLiteral",
																		"src": "4751:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4754:1:0",
																		"nodeType": "YulLiteral",
																		"src": "4754:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "4704:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "4704:12:0"
																},
																"nativeSrc": "4704:52:0",
																"nodeType": "YulFunctionCall",
																"src": "4704:52:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "4694:6:0",
																	"nodeType": "YulTypedName",
																	"src": "4694:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4770:28:0",
															"nodeType": "YulVariableDeclaration",
															"src": "4770:28:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "4782:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "4782:14:0"
																},
																"nativeSrc": "4782:16:0",
																"nodeType": "YulFunctionCall",
																"src": "4782:16:0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "4774:4:0",
																	"nodeType": "YulTypedName",
																	"src": "4774:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4829:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "4829:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4834:1:0",
																		"nodeType": "YulLiteral",
																		"src": "4834:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4837:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "4837:4:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "4814:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "4814:14:0"
																},
																"nativeSrc": "4814:28:0",
																"nodeType": "YulFunctionCall",
																"src": "4814:28:0"
															},
															"nativeSrc": "4814:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "4814:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4863:4:0",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "4873:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "4873:3:0"
																			},
																			{
																				"name": "size",
																				"nativeSrc": "4878:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "4878:4:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4869:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "4869:3:0"
																		},
																		"nativeSrc": "4869:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4856:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4856:6:0"
																},
																"nativeSrc": "4856:28:0",
																"nodeType": "YulFunctionCall",
																"src": "4856:28:0"
															},
															"nativeSrc": "4856:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "4856:28:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4934:21:0",
																		"nodeType": "YulBlock",
																		"src": "4934:21:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "4943:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "4943:3:0"
																						},
																						{
																							"name": "size",
																							"nativeSrc": "4948:4:0",
																							"nodeType": "YulIdentifier",
																							"src": "4948:4:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "4936:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "4936:6:0"
																					},
																					"nativeSrc": "4936:17:0",
																					"nodeType": "YulFunctionCall",
																					"src": "4936:17:0"
																				},
																				"nativeSrc": "4936:17:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "4936:17:0"
																			}
																		]
																	},
																	"nativeSrc": "4927:28:0",
																	"nodeType": "YulCase",
																	"src": "4927:28:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4932:1:0",
																		"nodeType": "YulLiteral",
																		"src": "4932:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4977:21:0",
																		"nodeType": "YulBlock",
																		"src": "4977:21:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "4986:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "4986:3:0"
																						},
																						{
																							"name": "size",
																							"nativeSrc": "4991:4:0",
																							"nodeType": "YulIdentifier",
																							"src": "4991:4:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "4979:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "4979:6:0"
																					},
																					"nativeSrc": "4979:17:0",
																					"nodeType": "YulFunctionCall",
																					"src": "4979:17:0"
																				},
																				"nativeSrc": "4979:17:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "4979:17:0"
																			}
																		]
																	},
																	"nativeSrc": "4969:29:0",
																	"nodeType": "YulCase",
																	"src": "4969:29:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "4907:6:0",
																"nodeType": "YulIdentifier",
																"src": "4907:6:0"
															},
															"nativeSrc": "4900:98:0",
															"nodeType": "YulSwitch",
															"src": "4900:98:0"
														}
													]
												},
												"documentation": "let ptr := mload(0x40)\n作用：这行代码将 0x40 位置的数据加载到 ptr 变量中。\nmload(0x40) 获取的是 \"free memory pointer\"，即指向 Solidity 存储中下一个空闲内存位置的指针。Solidity 使用 0x40 作为其内存管理的特殊位置。\n通过该指针，可以动态地管理内存，避免固定内存位置的冲突。\n2. calldatacopy(ptr, 0, calldatasize())\n作用：这行代码将调用数据（calldata）复制到内存中的 ptr 所指向的位置。\ncalldatacopy 是一个内联汇编函数，它将从 calldata 中复制数据到内存中。\nptr 是目标内存位置（前面我们加载了“free memory pointer”）。\n0 是 calldata 的偏移量（从 calldata 的开始处开始复制）。\ncalldatasize() 返回调用数据的大小，也就是我们要复制的数据长度。\n3. let result := delegatecall(gas(), impl, ptr, calldatasize(), 0, 0)\n作用：使用 delegatecall 执行目标合约的代码，并传递调用数据。\ndelegatecall 是一个特殊的操作，它将合约的代码执行委托给另一个合约，并且调用者的 storage 和 msg.sender 等信息不会变化，只会执行目标合约的代码。\ngas()：将剩余的 gas 传递给目标合约。\nimpl：目标合约的地址（通常是存储在代理合约中的实现合约地址）。\nptr：复制的调用数据的内存位置。\ncalldatasize()：调用数据的大小，即从调用中传递的参数的长度。\n0, 0：这两个参数表示返回数据的内存位置（返回数据会存储在 0 位置，但这里我们暂时不关心具体位置）。\ndelegatecall 会返回一个布尔值 result，如果执行成功，则 result 为 1，否则为 0。\n4. let size := returndatasize()\n作用：获取返回数据的大小。\nreturndatasize() 返回由目标合约执行后返回的数据的大小。\n5. returndatacopy(ptr, 0, size)\n作用：将目标合约返回的数据复制到内存中的 ptr 指向的地址。\nreturndatacopy 是一个内联汇编函数，它将返回数据从 0 位置复制到 ptr 所指向的位置，复制的长度为 size。\n6. mstore(0x40, add(ptr, size))\n作用：更新 \"free memory pointer\"。\nmstore(0x40, add(ptr, size)) 这行代码更新了 0x40 的指针，将其移动到新的空闲内存位置。具体来说，它将指针移动到 ptr + size，即返回数据后面的空闲内存区域。\n7. switch result\n作用：根据 delegatecall 的执行结果，判断是返回数据还是发生错误。\nswitch result 是根据 result 的值（它是 delegatecall 的返回值）来判断是否成功执行。\n8. case 0 { revert(ptr, size) }\n作用：如果 result 为 0，说明 delegatecall 执行失败，合约会调用 revert。\nrevert(ptr, size) 将复制返回数据并回滚交易，这样外部调用者会收到错误信息。\n9. default { return(ptr, size) }\n作用：如果 result 为非 0（即执行成功），则会将目标合约的返回数据返回给调用者。\nreturn(ptr, size) 将从 ptr 指向的内存位置返回数据，长度为 size。*",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 54,
														"isOffset": false,
														"isSlot": false,
														"src": "4724:4:0",
														"valueSize": 1
													}
												],
												"id": 68,
												"nodeType": "InlineAssembly",
												"src": "4578:431:0"
											}
										]
									},
									"id": 70,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1191:0:0"
									},
									"scope": 71,
									"src": "1163:3853:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 72,
							"src": "61:4958:0",
							"usedErrors": [],
							"usedEvents": [
								8
							]
						}
					],
					"src": "33:4988:0"
				},
				"id": 0
			}
		}
	}
}